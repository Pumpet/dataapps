#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Context
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\__WORK\\CS\\PRJ17\\DATAAPP17\\SQL\\LABSAMPLE.MDF")]
	public partial class DB : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEtno(Etno instance);
    partial void UpdateEtno(Etno instance);
    partial void DeleteEtno(Etno instance);
    partial void InsertPopul(Popul instance);
    partial void UpdatePopul(Popul instance);
    partial void DeletePopul(Popul instance);
    partial void InsertPoint(Point instance);
    partial void UpdatePoint(Point instance);
    partial void DeletePoint(Point instance);
    partial void InsertExped(Exped instance);
    partial void UpdateExped(Exped instance);
    partial void DeleteExped(Exped instance);
    partial void InsertListType(ListType instance);
    partial void UpdateListType(ListType instance);
    partial void DeleteListType(ListType instance);
    partial void InsertList(List instance);
    partial void UpdateList(List instance);
    partial void DeleteList(List instance);
    partial void InsertPlace(Place instance);
    partial void UpdatePlace(Place instance);
    partial void DeletePlace(Place instance);
    partial void InsertAnketAttr(AnketAttr instance);
    partial void UpdateAnketAttr(AnketAttr instance);
    partial void DeleteAnketAttr(AnketAttr instance);
    partial void InsertAnket(Anket instance);
    partial void UpdateAnket(Anket instance);
    partial void DeleteAnket(Anket instance);
    partial void InsertAnketDoc(AnketDoc instance);
    partial void UpdateAnketDoc(AnketDoc instance);
    partial void DeleteAnketDoc(AnketDoc instance);
    partial void InsertAnketRel(AnketRel instance);
    partial void UpdateAnketRel(AnketRel instance);
    partial void DeleteAnketRel(AnketRel instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertConst(Const instance);
    partial void UpdateConst(Const instance);
    partial void DeleteConst(Const instance);
    partial void InsertSample(Sample instance);
    partial void UpdateSample(Sample instance);
    partial void DeleteSample(Sample instance);
    partial void InsertBlock(Block instance);
    partial void UpdateBlock(Block instance);
    partial void DeleteBlock(Block instance);
    partial void InsertBlockItem(BlockItem instance);
    partial void UpdateBlockItem(BlockItem instance);
    partial void DeleteBlockItem(BlockItem instance);
    partial void InsertSampleItem(SampleItem instance);
    partial void UpdateSampleItem(SampleItem instance);
    partial void DeleteSampleItem(SampleItem instance);
    partial void InsertDnkItem(DnkItem instance);
    partial void UpdateDnkItem(DnkItem instance);
    partial void DeleteDnkItem(DnkItem instance);
    partial void InsertResult(Result instance);
    partial void UpdateResult(Result instance);
    partial void DeleteResult(Result instance);
    #endregion
		
		public DB() : 
				base(global::Context.Properties.Settings.Default.LABBASE_ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Etno> Etnos
		{
			get
			{
				return this.GetTable<Etno>();
			}
		}
		
		public System.Data.Linq.Table<Popul> Populs
		{
			get
			{
				return this.GetTable<Popul>();
			}
		}
		
		public System.Data.Linq.Table<Point> Points
		{
			get
			{
				return this.GetTable<Point>();
			}
		}
		
		public System.Data.Linq.Table<Exped> Expeds
		{
			get
			{
				return this.GetTable<Exped>();
			}
		}
		
		public System.Data.Linq.Table<ListType> ListTypes
		{
			get
			{
				return this.GetTable<ListType>();
			}
		}
		
		public System.Data.Linq.Table<List> Lists
		{
			get
			{
				return this.GetTable<List>();
			}
		}
		
		public System.Data.Linq.Table<Place> Places
		{
			get
			{
				return this.GetTable<Place>();
			}
		}
		
		public System.Data.Linq.Table<AnketAttr> AnketAttrs
		{
			get
			{
				return this.GetTable<AnketAttr>();
			}
		}
		
		public System.Data.Linq.Table<Anket> Ankets
		{
			get
			{
				return this.GetTable<Anket>();
			}
		}
		
		public System.Data.Linq.Table<AnketDoc> AnketDocs
		{
			get
			{
				return this.GetTable<AnketDoc>();
			}
		}
		
		public System.Data.Linq.Table<AnketRel> AnketRels
		{
			get
			{
				return this.GetTable<AnketRel>();
			}
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<Const> Consts
		{
			get
			{
				return this.GetTable<Const>();
			}
		}
		
		public System.Data.Linq.Table<Sample> Samples
		{
			get
			{
				return this.GetTable<Sample>();
			}
		}
		
		public System.Data.Linq.Table<Block> Blocks
		{
			get
			{
				return this.GetTable<Block>();
			}
		}
		
		public System.Data.Linq.Table<BlockItem> BlockItems
		{
			get
			{
				return this.GetTable<BlockItem>();
			}
		}
		
		public System.Data.Linq.Table<SampleItem> SampleItems
		{
			get
			{
				return this.GetTable<SampleItem>();
			}
		}
		
		public System.Data.Linq.Table<DnkItem> DnkItems
		{
			get
			{
				return this.GetTable<DnkItem>();
			}
		}
		
		public System.Data.Linq.Table<Result> Results
		{
			get
			{
				return this.GetTable<Result>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AnketProcess")]
		public int AnketProcess([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AnketId", DbType="Int")] System.Nullable<int> anketId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MsgRet", DbType="VarChar(100)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), anketId, msgRet);
			msgRet = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.BlockItemsGenerate")]
		public int BlockItemsGenerate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BlockId", DbType="Int")] System.Nullable<int> blockId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DimX", DbType="Int")] System.Nullable<int> dimX, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DimY", DbType="Int")] System.Nullable<int> dimY, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MsgRet", DbType="VarChar(100)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), blockId, dimX, dimY, msgRet);
			msgRet = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RepSamplesProc")]
		public ISingleResult<RepSamplesProcResult> RepSamplesProc([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpedId", DbType="Int")] System.Nullable<int> expedId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PopulId", DbType="Int")] System.Nullable<int> populId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SampleCode", DbType="VarChar(100)")] string sampleCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RUSID", DbType="VarChar(30)")] string rUSID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GPID", DbType="VarChar(30)")] string gPID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), expedId, populId, sampleCode, rUSID, gPID);
			return ((ISingleResult<RepSamplesProcResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Etnos")]
	public partial class Etno : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EtnoId;
		
		private string _Name;
		
		private string _NameEn;
		
		private EntitySet<Popul> _Populs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEtnoIdChanging(int value);
    partial void OnEtnoIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    #endregion
		
		public Etno()
		{
			this._Populs = new EntitySet<Popul>(new Action<Popul>(this.attach_Populs), new Action<Popul>(this.detach_Populs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtnoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EtnoId
		{
			get
			{
				return this._EtnoId;
			}
			set
			{
				if ((this._EtnoId != value))
				{
					this.OnEtnoIdChanging(value);
					this.SendPropertyChanging();
					this._EtnoId = value;
					this.SendPropertyChanged("EtnoId");
					this.OnEtnoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Etno_Popul", Storage="_Populs", ThisKey="EtnoId", OtherKey="EtnoId")]
		public EntitySet<Popul> Populs
		{
			get
			{
				return this._Populs;
			}
			set
			{
				this._Populs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Populs(Popul entity)
		{
			this.SendPropertyChanging();
			entity.Etno = this;
		}
		
		private void detach_Populs(Popul entity)
		{
			this.SendPropertyChanging();
			entity.Etno = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Populs")]
	public partial class Popul : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PopulId;
		
		private int _EtnoId;
		
		private string _Name;
		
		private string _NameEn;
		
		private string _Codes;
		
		private string _Comment;
		
		private EntitySet<Point> _Points;
		
		private EntitySet<Anket> _Ankets;
		
		private EntitySet<AnketRel> _AnketRels;
		
		private EntitySet<Result> _Results;
		
		private EntityRef<Etno> _Etno;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPopulIdChanging(int value);
    partial void OnPopulIdChanged();
    partial void OnEtnoIdChanging(int value);
    partial void OnEtnoIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNameEnChanging(string value);
    partial void OnNameEnChanged();
    partial void OnCodesChanging(string value);
    partial void OnCodesChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Popul()
		{
			this._Points = new EntitySet<Point>(new Action<Point>(this.attach_Points), new Action<Point>(this.detach_Points));
			this._Ankets = new EntitySet<Anket>(new Action<Anket>(this.attach_Ankets), new Action<Anket>(this.detach_Ankets));
			this._AnketRels = new EntitySet<AnketRel>(new Action<AnketRel>(this.attach_AnketRels), new Action<AnketRel>(this.detach_AnketRels));
			this._Results = new EntitySet<Result>(new Action<Result>(this.attach_Results), new Action<Result>(this.detach_Results));
			this._Etno = default(EntityRef<Etno>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopulId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PopulId
		{
			get
			{
				return this._PopulId;
			}
			set
			{
				if ((this._PopulId != value))
				{
					this.OnPopulIdChanging(value);
					this.SendPropertyChanging();
					this._PopulId = value;
					this.SendPropertyChanged("PopulId");
					this.OnPopulIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtnoId", DbType="Int NOT NULL")]
		public int EtnoId
		{
			get
			{
				return this._EtnoId;
			}
			set
			{
				if ((this._EtnoId != value))
				{
					if (this._Etno.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEtnoIdChanging(value);
					this.SendPropertyChanging();
					this._EtnoId = value;
					this.SendPropertyChanged("EtnoId");
					this.OnEtnoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameEn", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NameEn
		{
			get
			{
				return this._NameEn;
			}
			set
			{
				if ((this._NameEn != value))
				{
					this.OnNameEnChanging(value);
					this.SendPropertyChanging();
					this._NameEn = value;
					this.SendPropertyChanged("NameEn");
					this.OnNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codes", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Codes
		{
			get
			{
				return this._Codes;
			}
			set
			{
				if ((this._Codes != value))
				{
					this.OnCodesChanging(value);
					this.SendPropertyChanging();
					this._Codes = value;
					this.SendPropertyChanged("Codes");
					this.OnCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Popul_Point", Storage="_Points", ThisKey="PopulId", OtherKey="PopulId")]
		public EntitySet<Point> Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				this._Points.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Popul_Anket", Storage="_Ankets", ThisKey="PopulId", OtherKey="PopulId")]
		public EntitySet<Anket> Ankets
		{
			get
			{
				return this._Ankets;
			}
			set
			{
				this._Ankets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Popul_AnketRel", Storage="_AnketRels", ThisKey="PopulId", OtherKey="PopulId")]
		public EntitySet<AnketRel> AnketRels
		{
			get
			{
				return this._AnketRels;
			}
			set
			{
				this._AnketRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Popul_Result", Storage="_Results", ThisKey="PopulId", OtherKey="PopulId")]
		public EntitySet<Result> Results
		{
			get
			{
				return this._Results;
			}
			set
			{
				this._Results.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Etno_Popul", Storage="_Etno", ThisKey="EtnoId", OtherKey="EtnoId", IsForeignKey=true)]
		public Etno Etno
		{
			get
			{
				return this._Etno.Entity;
			}
			set
			{
				Etno previousValue = this._Etno.Entity;
				if (((previousValue != value) 
							|| (this._Etno.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Etno.Entity = null;
						previousValue.Populs.Remove(this);
					}
					this._Etno.Entity = value;
					if ((value != null))
					{
						value.Populs.Add(this);
						this._EtnoId = value.EtnoId;
					}
					else
					{
						this._EtnoId = default(int);
					}
					this.SendPropertyChanged("Etno");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Points(Point entity)
		{
			this.SendPropertyChanging();
			entity.Popul = this;
		}
		
		private void detach_Points(Point entity)
		{
			this.SendPropertyChanging();
			entity.Popul = null;
		}
		
		private void attach_Ankets(Anket entity)
		{
			this.SendPropertyChanging();
			entity.Popul = this;
		}
		
		private void detach_Ankets(Anket entity)
		{
			this.SendPropertyChanging();
			entity.Popul = null;
		}
		
		private void attach_AnketRels(AnketRel entity)
		{
			this.SendPropertyChanging();
			entity.Popul = this;
		}
		
		private void detach_AnketRels(AnketRel entity)
		{
			this.SendPropertyChanging();
			entity.Popul = null;
		}
		
		private void attach_Results(Result entity)
		{
			this.SendPropertyChanging();
			entity.Popul = this;
		}
		
		private void detach_Results(Result entity)
		{
			this.SendPropertyChanging();
			entity.Popul = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Points")]
	public partial class Point : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PointId;
		
		private int _PopulId;
		
		private int _ExpedId;
		
		private string _PointName;
		
		private string _Period;
		
		private string _Region;
		
		private string _RegionEn;
		
		private string _LocName;
		
		private double _LocX;
		
		private double _LocY;
		
		private string _Head;
		
		private string _Comment;
		
		private EntitySet<Anket> _Ankets;
		
		private EntityRef<Popul> _Popul;
		
		private EntityRef<Exped> _Exped;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPointIdChanging(int value);
    partial void OnPointIdChanged();
    partial void OnPopulIdChanging(int value);
    partial void OnPopulIdChanged();
    partial void OnExpedIdChanging(int value);
    partial void OnExpedIdChanged();
    partial void OnPointNameChanging(string value);
    partial void OnPointNameChanged();
    partial void OnPeriodChanging(string value);
    partial void OnPeriodChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnRegionEnChanging(string value);
    partial void OnRegionEnChanged();
    partial void OnLocNameChanging(string value);
    partial void OnLocNameChanged();
    partial void OnLocXChanging(double value);
    partial void OnLocXChanged();
    partial void OnLocYChanging(double value);
    partial void OnLocYChanged();
    partial void OnHeadChanging(string value);
    partial void OnHeadChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Point()
		{
			this._Ankets = new EntitySet<Anket>(new Action<Anket>(this.attach_Ankets), new Action<Anket>(this.detach_Ankets));
			this._Popul = default(EntityRef<Popul>);
			this._Exped = default(EntityRef<Exped>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PointId
		{
			get
			{
				return this._PointId;
			}
			set
			{
				if ((this._PointId != value))
				{
					this.OnPointIdChanging(value);
					this.SendPropertyChanging();
					this._PointId = value;
					this.SendPropertyChanged("PointId");
					this.OnPointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopulId", DbType="Int NOT NULL")]
		public int PopulId
		{
			get
			{
				return this._PopulId;
			}
			set
			{
				if ((this._PopulId != value))
				{
					if (this._Popul.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPopulIdChanging(value);
					this.SendPropertyChanging();
					this._PopulId = value;
					this.SendPropertyChanged("PopulId");
					this.OnPopulIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpedId", DbType="Int NOT NULL")]
		public int ExpedId
		{
			get
			{
				return this._ExpedId;
			}
			set
			{
				if ((this._ExpedId != value))
				{
					if (this._Exped.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpedIdChanging(value);
					this.SendPropertyChanging();
					this._ExpedId = value;
					this.SendPropertyChanged("ExpedId");
					this.OnExpedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PointName
		{
			get
			{
				return this._PointName;
			}
			set
			{
				if ((this._PointName != value))
				{
					this.OnPointNameChanging(value);
					this.SendPropertyChanging();
					this._PointName = value;
					this.SendPropertyChanged("PointName");
					this.OnPointNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Period", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Period
		{
			get
			{
				return this._Period;
			}
			set
			{
				if ((this._Period != value))
				{
					this.OnPeriodChanging(value);
					this.SendPropertyChanging();
					this._Period = value;
					this.SendPropertyChanged("Period");
					this.OnPeriodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionEn", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string RegionEn
		{
			get
			{
				return this._RegionEn;
			}
			set
			{
				if ((this._RegionEn != value))
				{
					this.OnRegionEnChanging(value);
					this.SendPropertyChanging();
					this._RegionEn = value;
					this.SendPropertyChanged("RegionEn");
					this.OnRegionEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LocName
		{
			get
			{
				return this._LocName;
			}
			set
			{
				if ((this._LocName != value))
				{
					this.OnLocNameChanging(value);
					this.SendPropertyChanging();
					this._LocName = value;
					this.SendPropertyChanged("LocName");
					this.OnLocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocX", DbType="Float NOT NULL")]
		public double LocX
		{
			get
			{
				return this._LocX;
			}
			set
			{
				if ((this._LocX != value))
				{
					this.OnLocXChanging(value);
					this.SendPropertyChanging();
					this._LocX = value;
					this.SendPropertyChanged("LocX");
					this.OnLocXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocY", DbType="Float NOT NULL")]
		public double LocY
		{
			get
			{
				return this._LocY;
			}
			set
			{
				if ((this._LocY != value))
				{
					this.OnLocYChanging(value);
					this.SendPropertyChanging();
					this._LocY = value;
					this.SendPropertyChanged("LocY");
					this.OnLocYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Head", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Head
		{
			get
			{
				return this._Head;
			}
			set
			{
				if ((this._Head != value))
				{
					this.OnHeadChanging(value);
					this.SendPropertyChanging();
					this._Head = value;
					this.SendPropertyChanged("Head");
					this.OnHeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Point_Anket", Storage="_Ankets", ThisKey="PointId", OtherKey="PointId")]
		public EntitySet<Anket> Ankets
		{
			get
			{
				return this._Ankets;
			}
			set
			{
				this._Ankets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Popul_Point", Storage="_Popul", ThisKey="PopulId", OtherKey="PopulId", IsForeignKey=true)]
		public Popul Popul
		{
			get
			{
				return this._Popul.Entity;
			}
			set
			{
				Popul previousValue = this._Popul.Entity;
				if (((previousValue != value) 
							|| (this._Popul.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Popul.Entity = null;
						previousValue.Points.Remove(this);
					}
					this._Popul.Entity = value;
					if ((value != null))
					{
						value.Points.Add(this);
						this._PopulId = value.PopulId;
					}
					else
					{
						this._PopulId = default(int);
					}
					this.SendPropertyChanged("Popul");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exped_Point", Storage="_Exped", ThisKey="ExpedId", OtherKey="ExpedId", IsForeignKey=true)]
		public Exped Exped
		{
			get
			{
				return this._Exped.Entity;
			}
			set
			{
				Exped previousValue = this._Exped.Entity;
				if (((previousValue != value) 
							|| (this._Exped.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Exped.Entity = null;
						previousValue.Points.Remove(this);
					}
					this._Exped.Entity = value;
					if ((value != null))
					{
						value.Points.Add(this);
						this._ExpedId = value.ExpedId;
					}
					else
					{
						this._ExpedId = default(int);
					}
					this.SendPropertyChanged("Exped");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ankets(Anket entity)
		{
			this.SendPropertyChanging();
			entity.Point = this;
		}
		
		private void detach_Ankets(Anket entity)
		{
			this.SendPropertyChanging();
			entity.Point = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expeds")]
	public partial class Exped : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpedId;
		
		private string _Name;
		
		private System.DateTime _DateStart;
		
		private System.DateTime _DateEnd;
		
		private string _Region;
		
		private string _Head;
		
		private string _Info;
		
		private EntitySet<Point> _Points;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpedIdChanging(int value);
    partial void OnExpedIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDateStartChanging(System.DateTime value);
    partial void OnDateStartChanged();
    partial void OnDateEndChanging(System.DateTime value);
    partial void OnDateEndChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnHeadChanging(string value);
    partial void OnHeadChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    #endregion
		
		public Exped()
		{
			this._Points = new EntitySet<Point>(new Action<Point>(this.attach_Points), new Action<Point>(this.detach_Points));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpedId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExpedId
		{
			get
			{
				return this._ExpedId;
			}
			set
			{
				if ((this._ExpedId != value))
				{
					this.OnExpedIdChanging(value);
					this.SendPropertyChanging();
					this._ExpedId = value;
					this.SendPropertyChanged("ExpedId");
					this.OnExpedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this.OnDateStartChanging(value);
					this.SendPropertyChanging();
					this._DateStart = value;
					this.SendPropertyChanged("DateStart");
					this.OnDateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="SmallDateTime NOT NULL")]
		public System.DateTime DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Head", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Head
		{
			get
			{
				return this._Head;
			}
			set
			{
				if ((this._Head != value))
				{
					this.OnHeadChanging(value);
					this.SendPropertyChanging();
					this._Head = value;
					this.SendPropertyChanged("Head");
					this.OnHeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Exped_Point", Storage="_Points", ThisKey="ExpedId", OtherKey="ExpedId")]
		public EntitySet<Point> Points
		{
			get
			{
				return this._Points;
			}
			set
			{
				this._Points.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Points(Point entity)
		{
			this.SendPropertyChanging();
			entity.Exped = this;
		}
		
		private void detach_Points(Point entity)
		{
			this.SendPropertyChanging();
			entity.Exped = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ListTypes")]
	public partial class ListType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
		private EntitySet<List> _Lists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ListType()
		{
			this._Lists = new EntitySet<List>(new Action<List>(this.attach_Lists), new Action<List>(this.detach_Lists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ListType_List", Storage="_Lists", ThisKey="Code", OtherKey="TypeCode")]
		public EntitySet<List> Lists
		{
			get
			{
				return this._Lists;
			}
			set
			{
				this._Lists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lists(List entity)
		{
			this.SendPropertyChanging();
			entity.ListType = this;
		}
		
		private void detach_Lists(List entity)
		{
			this.SendPropertyChanging();
			entity.ListType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lists")]
	public partial class List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ListId;
		
		private string _TypeCode;
		
		private string _Item;
		
		private string _Code;
		
		private EntitySet<AnketAttr> _AnketAttrs;
		
		private EntitySet<Anket> _Ankets;
		
		private EntitySet<AnketRel> _AnketRels;
		
		private EntitySet<AnketRel> _AnketRels1;
		
		private EntitySet<Sample> _Samples;
		
		private EntitySet<SampleItem> _SampleItems;
		
		private EntitySet<DnkItem> _DnkItems;
		
		private EntitySet<DnkItem> _DnkItems1;
		
		private EntityRef<ListType> _ListType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnListIdChanging(int value);
    partial void OnListIdChanged();
    partial void OnTypeCodeChanging(string value);
    partial void OnTypeCodeChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    #endregion
		
		public List()
		{
			this._AnketAttrs = new EntitySet<AnketAttr>(new Action<AnketAttr>(this.attach_AnketAttrs), new Action<AnketAttr>(this.detach_AnketAttrs));
			this._Ankets = new EntitySet<Anket>(new Action<Anket>(this.attach_Ankets), new Action<Anket>(this.detach_Ankets));
			this._AnketRels = new EntitySet<AnketRel>(new Action<AnketRel>(this.attach_AnketRels), new Action<AnketRel>(this.detach_AnketRels));
			this._AnketRels1 = new EntitySet<AnketRel>(new Action<AnketRel>(this.attach_AnketRels1), new Action<AnketRel>(this.detach_AnketRels1));
			this._Samples = new EntitySet<Sample>(new Action<Sample>(this.attach_Samples), new Action<Sample>(this.detach_Samples));
			this._SampleItems = new EntitySet<SampleItem>(new Action<SampleItem>(this.attach_SampleItems), new Action<SampleItem>(this.detach_SampleItems));
			this._DnkItems = new EntitySet<DnkItem>(new Action<DnkItem>(this.attach_DnkItems), new Action<DnkItem>(this.detach_DnkItems));
			this._DnkItems1 = new EntitySet<DnkItem>(new Action<DnkItem>(this.attach_DnkItems1), new Action<DnkItem>(this.detach_DnkItems1));
			this._ListType = default(EntityRef<ListType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ListId
		{
			get
			{
				return this._ListId;
			}
			set
			{
				if ((this._ListId != value))
				{
					this.OnListIdChanging(value);
					this.SendPropertyChanging();
					this._ListId = value;
					this.SendPropertyChanged("ListId");
					this.OnListIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					if (this._ListType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_AnketAttr", Storage="_AnketAttrs", ThisKey="ListId", OtherKey="TypeId")]
		public EntitySet<AnketAttr> AnketAttrs
		{
			get
			{
				return this._AnketAttrs;
			}
			set
			{
				this._AnketAttrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_Anket", Storage="_Ankets", ThisKey="ListId", OtherKey="LinguaId")]
		public EntitySet<Anket> Ankets
		{
			get
			{
				return this._Ankets;
			}
			set
			{
				this._Ankets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_AnketRel", Storage="_AnketRels", ThisKey="ListId", OtherKey="LinguaId")]
		public EntitySet<AnketRel> AnketRels
		{
			get
			{
				return this._AnketRels;
			}
			set
			{
				this._AnketRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_AnketRel1", Storage="_AnketRels1", ThisKey="ListId", OtherKey="RelTypeId")]
		public EntitySet<AnketRel> AnketRels1
		{
			get
			{
				return this._AnketRels1;
			}
			set
			{
				this._AnketRels1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_Sample", Storage="_Samples", ThisKey="ListId", OtherKey="SampleTypeId")]
		public EntitySet<Sample> Samples
		{
			get
			{
				return this._Samples;
			}
			set
			{
				this._Samples.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_SampleItem", Storage="_SampleItems", ThisKey="ListId", OtherKey="SampleItemTypeId")]
		public EntitySet<SampleItem> SampleItems
		{
			get
			{
				return this._SampleItems;
			}
			set
			{
				this._SampleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_DnkItem", Storage="_DnkItems", ThisKey="ListId", OtherKey="ExtractMethodId")]
		public EntitySet<DnkItem> DnkItems
		{
			get
			{
				return this._DnkItems;
			}
			set
			{
				this._DnkItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_DnkItem1", Storage="_DnkItems1", ThisKey="ListId", OtherKey="DnkItemTypeId")]
		public EntitySet<DnkItem> DnkItems1
		{
			get
			{
				return this._DnkItems1;
			}
			set
			{
				this._DnkItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ListType_List", Storage="_ListType", ThisKey="TypeCode", OtherKey="Code", IsForeignKey=true)]
		public ListType ListType
		{
			get
			{
				return this._ListType.Entity;
			}
			set
			{
				ListType previousValue = this._ListType.Entity;
				if (((previousValue != value) 
							|| (this._ListType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ListType.Entity = null;
						previousValue.Lists.Remove(this);
					}
					this._ListType.Entity = value;
					if ((value != null))
					{
						value.Lists.Add(this);
						this._TypeCode = value.Code;
					}
					else
					{
						this._TypeCode = default(string);
					}
					this.SendPropertyChanged("ListType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnketAttrs(AnketAttr entity)
		{
			this.SendPropertyChanging();
			entity.Type = this;
		}
		
		private void detach_AnketAttrs(AnketAttr entity)
		{
			this.SendPropertyChanging();
			entity.Type = null;
		}
		
		private void attach_Ankets(Anket entity)
		{
			this.SendPropertyChanging();
			entity.Lingua = this;
		}
		
		private void detach_Ankets(Anket entity)
		{
			this.SendPropertyChanging();
			entity.Lingua = null;
		}
		
		private void attach_AnketRels(AnketRel entity)
		{
			this.SendPropertyChanging();
			entity.Lingua = this;
		}
		
		private void detach_AnketRels(AnketRel entity)
		{
			this.SendPropertyChanging();
			entity.Lingua = null;
		}
		
		private void attach_AnketRels1(AnketRel entity)
		{
			this.SendPropertyChanging();
			entity.RelType = this;
		}
		
		private void detach_AnketRels1(AnketRel entity)
		{
			this.SendPropertyChanging();
			entity.RelType = null;
		}
		
		private void attach_Samples(Sample entity)
		{
			this.SendPropertyChanging();
			entity.SampleType = this;
		}
		
		private void detach_Samples(Sample entity)
		{
			this.SendPropertyChanging();
			entity.SampleType = null;
		}
		
		private void attach_SampleItems(SampleItem entity)
		{
			this.SendPropertyChanging();
			entity.SampleItemType = this;
		}
		
		private void detach_SampleItems(SampleItem entity)
		{
			this.SendPropertyChanging();
			entity.SampleItemType = null;
		}
		
		private void attach_DnkItems(DnkItem entity)
		{
			this.SendPropertyChanging();
			entity.ExtractMethod = this;
		}
		
		private void detach_DnkItems(DnkItem entity)
		{
			this.SendPropertyChanging();
			entity.ExtractMethod = null;
		}
		
		private void attach_DnkItems1(DnkItem entity)
		{
			this.SendPropertyChanging();
			entity.DnkItemType = this;
		}
		
		private void detach_DnkItems1(DnkItem entity)
		{
			this.SendPropertyChanging();
			entity.DnkItemType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Places")]
	public partial class Place : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlaceId;
		
		private string _Name;
		
		private string _Region;
		
		private string _Raion;
		
		private string _City;
		
		private string _Punkt;
		
		private string _KladrCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlaceIdChanging(int value);
    partial void OnPlaceIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnRaionChanging(string value);
    partial void OnRaionChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPunktChanging(string value);
    partial void OnPunktChanged();
    partial void OnKladrCodeChanging(string value);
    partial void OnKladrCodeChanged();
    #endregion
		
		public Place()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PlaceId
		{
			get
			{
				return this._PlaceId;
			}
			set
			{
				if ((this._PlaceId != value))
				{
					this.OnPlaceIdChanging(value);
					this.SendPropertyChanging();
					this._PlaceId = value;
					this.SendPropertyChanged("PlaceId");
					this.OnPlaceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(240) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(60)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Raion", DbType="VarChar(60)")]
		public string Raion
		{
			get
			{
				return this._Raion;
			}
			set
			{
				if ((this._Raion != value))
				{
					this.OnRaionChanging(value);
					this.SendPropertyChanging();
					this._Raion = value;
					this.SendPropertyChanged("Raion");
					this.OnRaionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(60)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Punkt", DbType="VarChar(60)")]
		public string Punkt
		{
			get
			{
				return this._Punkt;
			}
			set
			{
				if ((this._Punkt != value))
				{
					this.OnPunktChanging(value);
					this.SendPropertyChanging();
					this._Punkt = value;
					this.SendPropertyChanged("Punkt");
					this.OnPunktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KladrCode", DbType="VarChar(20)")]
		public string KladrCode
		{
			get
			{
				return this._KladrCode;
			}
			set
			{
				if ((this._KladrCode != value))
				{
					this.OnKladrCodeChanging(value);
					this.SendPropertyChanging();
					this._KladrCode = value;
					this.SendPropertyChanged("KladrCode");
					this.OnKladrCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnketAttrs")]
	public partial class AnketAttr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttrId;
		
		private int _AnketId;
		
		private int _TypeId;
		
		private string _Value;
		
		private EntityRef<List> _List;
		
		private EntityRef<Anket> _Anket;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttrIdChanging(int value);
    partial void OnAttrIdChanged();
    partial void OnAnketIdChanging(int value);
    partial void OnAnketIdChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public AnketAttr()
		{
			this._List = default(EntityRef<List>);
			this._Anket = default(EntityRef<Anket>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttrId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttrId
		{
			get
			{
				return this._AttrId;
			}
			set
			{
				if ((this._AttrId != value))
				{
					this.OnAttrIdChanging(value);
					this.SendPropertyChanging();
					this._AttrId = value;
					this.SendPropertyChanged("AttrId");
					this.OnAttrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnketId", DbType="Int NOT NULL")]
		public int AnketId
		{
			get
			{
				return this._AnketId;
			}
			set
			{
				if ((this._AnketId != value))
				{
					if (this._Anket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnketIdChanging(value);
					this.SendPropertyChanging();
					this._AnketId = value;
					this.SendPropertyChanged("AnketId");
					this.OnAnketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_AnketAttr", Storage="_List", ThisKey="TypeId", OtherKey="ListId", IsForeignKey=true)]
		public List Type
		{
			get
			{
				return this._List.Entity;
			}
			set
			{
				List previousValue = this._List.Entity;
				if (((previousValue != value) 
							|| (this._List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._List.Entity = null;
						previousValue.AnketAttrs.Remove(this);
					}
					this._List.Entity = value;
					if ((value != null))
					{
						value.AnketAttrs.Add(this);
						this._TypeId = value.ListId;
					}
					else
					{
						this._TypeId = default(int);
					}
					this.SendPropertyChanged("Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Anket_AnketAttr", Storage="_Anket", ThisKey="AnketId", OtherKey="AnketId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Anket Anket
		{
			get
			{
				return this._Anket.Entity;
			}
			set
			{
				Anket previousValue = this._Anket.Entity;
				if (((previousValue != value) 
							|| (this._Anket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Anket.Entity = null;
						previousValue.AnketAttrs.Remove(this);
					}
					this._Anket.Entity = value;
					if ((value != null))
					{
						value.AnketAttrs.Add(this);
						this._AnketId = value.AnketId;
					}
					else
					{
						this._AnketId = default(int);
					}
					this.SendPropertyChanged("Anket");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ankets")]
	public partial class Anket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnketId;
		
		private string _RUSID;
		
		private string _GPID;
		
		private string _Fio;
		
		private string _LivePlace;
		
		private string _LiveAddress;
		
		private int _PointId;
		
		private System.Nullable<int> _PopulId;
		
		private string _Origin;
		
		private System.DateTime _InDate;
		
		private string _InPlace;
		
		private System.DateTime _BirthDate;
		
		private string _BirthPlace;
		
		private byte _Man;
		
		private int _LinguaId;
		
		private string _OtherAncestors;
		
		private string _Comment;
		
		private EntitySet<AnketAttr> _AnketAttrs;
		
		private EntitySet<AnketDoc> _AnketDocs;
		
		private EntitySet<AnketRel> _AnketRels;
		
		private EntitySet<Sample> _Samples;
		
		private EntityRef<List> _List;
		
		private EntityRef<Point> _Point;
		
		private EntityRef<Popul> _Popul;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnketIdChanging(int value);
    partial void OnAnketIdChanged();
    partial void OnRUSIDChanging(string value);
    partial void OnRUSIDChanged();
    partial void OnGPIDChanging(string value);
    partial void OnGPIDChanged();
    partial void OnFioChanging(string value);
    partial void OnFioChanged();
    partial void OnLivePlaceChanging(string value);
    partial void OnLivePlaceChanged();
    partial void OnLiveAddressChanging(string value);
    partial void OnLiveAddressChanged();
    partial void OnPointIdChanging(int value);
    partial void OnPointIdChanged();
    partial void OnPopulIdChanging(System.Nullable<int> value);
    partial void OnPopulIdChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnInDateChanging(System.DateTime value);
    partial void OnInDateChanged();
    partial void OnInPlaceChanging(string value);
    partial void OnInPlaceChanged();
    partial void OnBirthDateChanging(System.DateTime value);
    partial void OnBirthDateChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnManChanging(byte value);
    partial void OnManChanged();
    partial void OnLinguaIdChanging(int value);
    partial void OnLinguaIdChanged();
    partial void OnOtherAncestorsChanging(string value);
    partial void OnOtherAncestorsChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Anket()
		{
			this._AnketAttrs = new EntitySet<AnketAttr>(new Action<AnketAttr>(this.attach_AnketAttrs), new Action<AnketAttr>(this.detach_AnketAttrs));
			this._AnketDocs = new EntitySet<AnketDoc>(new Action<AnketDoc>(this.attach_AnketDocs), new Action<AnketDoc>(this.detach_AnketDocs));
			this._AnketRels = new EntitySet<AnketRel>(new Action<AnketRel>(this.attach_AnketRels), new Action<AnketRel>(this.detach_AnketRels));
			this._Samples = new EntitySet<Sample>(new Action<Sample>(this.attach_Samples), new Action<Sample>(this.detach_Samples));
			this._List = default(EntityRef<List>);
			this._Point = default(EntityRef<Point>);
			this._Popul = default(EntityRef<Popul>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnketId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnketId
		{
			get
			{
				return this._AnketId;
			}
			set
			{
				if ((this._AnketId != value))
				{
					this.OnAnketIdChanging(value);
					this.SendPropertyChanging();
					this._AnketId = value;
					this.SendPropertyChanged("AnketId");
					this.OnAnketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RUSID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string RUSID
		{
			get
			{
				return this._RUSID;
			}
			set
			{
				if ((this._RUSID != value))
				{
					this.OnRUSIDChanging(value);
					this.SendPropertyChanging();
					this._RUSID = value;
					this.SendPropertyChanged("RUSID");
					this.OnRUSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string GPID
		{
			get
			{
				return this._GPID;
			}
			set
			{
				if ((this._GPID != value))
				{
					this.OnGPIDChanging(value);
					this.SendPropertyChanging();
					this._GPID = value;
					this.SendPropertyChanged("GPID");
					this.OnGPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fio", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Fio
		{
			get
			{
				return this._Fio;
			}
			set
			{
				if ((this._Fio != value))
				{
					this.OnFioChanging(value);
					this.SendPropertyChanging();
					this._Fio = value;
					this.SendPropertyChanged("Fio");
					this.OnFioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LivePlace", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string LivePlace
		{
			get
			{
				return this._LivePlace;
			}
			set
			{
				if ((this._LivePlace != value))
				{
					this.OnLivePlaceChanging(value);
					this.SendPropertyChanging();
					this._LivePlace = value;
					this.SendPropertyChanged("LivePlace");
					this.OnLivePlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LiveAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LiveAddress
		{
			get
			{
				return this._LiveAddress;
			}
			set
			{
				if ((this._LiveAddress != value))
				{
					this.OnLiveAddressChanging(value);
					this.SendPropertyChanging();
					this._LiveAddress = value;
					this.SendPropertyChanged("LiveAddress");
					this.OnLiveAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointId", DbType="Int NOT NULL")]
		public int PointId
		{
			get
			{
				return this._PointId;
			}
			set
			{
				if ((this._PointId != value))
				{
					if (this._Point.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPointIdChanging(value);
					this.SendPropertyChanging();
					this._PointId = value;
					this.SendPropertyChanged("PointId");
					this.OnPointIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopulId", DbType="Int")]
		public System.Nullable<int> PopulId
		{
			get
			{
				return this._PopulId;
			}
			set
			{
				if ((this._PopulId != value))
				{
					if (this._Popul.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPopulIdChanging(value);
					this.SendPropertyChanging();
					this._PopulId = value;
					this.SendPropertyChanged("PopulId");
					this.OnPopulIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InDate", DbType="Date NOT NULL")]
		public System.DateTime InDate
		{
			get
			{
				return this._InDate;
			}
			set
			{
				if ((this._InDate != value))
				{
					this.OnInDateChanging(value);
					this.SendPropertyChanging();
					this._InDate = value;
					this.SendPropertyChanged("InDate");
					this.OnInDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InPlace", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string InPlace
		{
			get
			{
				return this._InPlace;
			}
			set
			{
				if ((this._InPlace != value))
				{
					this.OnInPlaceChanging(value);
					this.SendPropertyChanging();
					this._InPlace = value;
					this.SendPropertyChanged("InPlace");
					this.OnInPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date NOT NULL")]
		public System.DateTime BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Man", DbType="TinyInt NOT NULL")]
		public byte Man
		{
			get
			{
				return this._Man;
			}
			set
			{
				if ((this._Man != value))
				{
					this.OnManChanging(value);
					this.SendPropertyChanging();
					this._Man = value;
					this.SendPropertyChanged("Man");
					this.OnManChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinguaId", DbType="Int NOT NULL")]
		public int LinguaId
		{
			get
			{
				return this._LinguaId;
			}
			set
			{
				if ((this._LinguaId != value))
				{
					if (this._List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinguaIdChanging(value);
					this.SendPropertyChanging();
					this._LinguaId = value;
					this.SendPropertyChanged("LinguaId");
					this.OnLinguaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherAncestors", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string OtherAncestors
		{
			get
			{
				return this._OtherAncestors;
			}
			set
			{
				if ((this._OtherAncestors != value))
				{
					this.OnOtherAncestorsChanging(value);
					this.SendPropertyChanging();
					this._OtherAncestors = value;
					this.SendPropertyChanged("OtherAncestors");
					this.OnOtherAncestorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Anket_AnketAttr", Storage="_AnketAttrs", ThisKey="AnketId", OtherKey="AnketId")]
		public EntitySet<AnketAttr> AnketAttrs
		{
			get
			{
				return this._AnketAttrs;
			}
			set
			{
				this._AnketAttrs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Anket_AnketDoc", Storage="_AnketDocs", ThisKey="AnketId", OtherKey="AnketId")]
		public EntitySet<AnketDoc> AnketDocs
		{
			get
			{
				return this._AnketDocs;
			}
			set
			{
				this._AnketDocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Anket_AnketRel", Storage="_AnketRels", ThisKey="AnketId", OtherKey="AnketId")]
		public EntitySet<AnketRel> AnketRels
		{
			get
			{
				return this._AnketRels;
			}
			set
			{
				this._AnketRels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Anket_Sample", Storage="_Samples", ThisKey="AnketId", OtherKey="AnketId")]
		public EntitySet<Sample> Samples
		{
			get
			{
				return this._Samples;
			}
			set
			{
				this._Samples.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_Anket", Storage="_List", ThisKey="LinguaId", OtherKey="ListId", IsForeignKey=true)]
		public List Lingua
		{
			get
			{
				return this._List.Entity;
			}
			set
			{
				List previousValue = this._List.Entity;
				if (((previousValue != value) 
							|| (this._List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._List.Entity = null;
						previousValue.Ankets.Remove(this);
					}
					this._List.Entity = value;
					if ((value != null))
					{
						value.Ankets.Add(this);
						this._LinguaId = value.ListId;
					}
					else
					{
						this._LinguaId = default(int);
					}
					this.SendPropertyChanged("Lingua");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Point_Anket", Storage="_Point", ThisKey="PointId", OtherKey="PointId", IsForeignKey=true)]
		public Point Point
		{
			get
			{
				return this._Point.Entity;
			}
			set
			{
				Point previousValue = this._Point.Entity;
				if (((previousValue != value) 
							|| (this._Point.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Point.Entity = null;
						previousValue.Ankets.Remove(this);
					}
					this._Point.Entity = value;
					if ((value != null))
					{
						value.Ankets.Add(this);
						this._PointId = value.PointId;
					}
					else
					{
						this._PointId = default(int);
					}
					this.SendPropertyChanged("Point");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Popul_Anket", Storage="_Popul", ThisKey="PopulId", OtherKey="PopulId", IsForeignKey=true)]
		public Popul Popul
		{
			get
			{
				return this._Popul.Entity;
			}
			set
			{
				Popul previousValue = this._Popul.Entity;
				if (((previousValue != value) 
							|| (this._Popul.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Popul.Entity = null;
						previousValue.Ankets.Remove(this);
					}
					this._Popul.Entity = value;
					if ((value != null))
					{
						value.Ankets.Add(this);
						this._PopulId = value.PopulId;
					}
					else
					{
						this._PopulId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Popul");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AnketAttrs(AnketAttr entity)
		{
			this.SendPropertyChanging();
			entity.Anket = this;
		}
		
		private void detach_AnketAttrs(AnketAttr entity)
		{
			this.SendPropertyChanging();
			entity.Anket = null;
		}
		
		private void attach_AnketDocs(AnketDoc entity)
		{
			this.SendPropertyChanging();
			entity.Anket = this;
		}
		
		private void detach_AnketDocs(AnketDoc entity)
		{
			this.SendPropertyChanging();
			entity.Anket = null;
		}
		
		private void attach_AnketRels(AnketRel entity)
		{
			this.SendPropertyChanging();
			entity.Anket = this;
		}
		
		private void detach_AnketRels(AnketRel entity)
		{
			this.SendPropertyChanging();
			entity.Anket = null;
		}
		
		private void attach_Samples(Sample entity)
		{
			this.SendPropertyChanging();
			entity.Anket = this;
		}
		
		private void detach_Samples(Sample entity)
		{
			this.SendPropertyChanging();
			entity.Anket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnketDocs")]
	public partial class AnketDoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnketDocId;
		
		private int _AnketId;
		
		private string _Link;
		
		private string _DocType;
		
		private string _Info;
		
		private EntityRef<Anket> _Anket;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnketDocIdChanging(int value);
    partial void OnAnketDocIdChanged();
    partial void OnAnketIdChanging(int value);
    partial void OnAnketIdChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnDocTypeChanging(string value);
    partial void OnDocTypeChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    #endregion
		
		public AnketDoc()
		{
			this._Anket = default(EntityRef<Anket>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnketDocId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnketDocId
		{
			get
			{
				return this._AnketDocId;
			}
			set
			{
				if ((this._AnketDocId != value))
				{
					this.OnAnketDocIdChanging(value);
					this.SendPropertyChanging();
					this._AnketDocId = value;
					this.SendPropertyChanged("AnketDocId");
					this.OnAnketDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnketId", DbType="Int NOT NULL")]
		public int AnketId
		{
			get
			{
				return this._AnketId;
			}
			set
			{
				if ((this._AnketId != value))
				{
					if (this._Anket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnketIdChanging(value);
					this.SendPropertyChanging();
					this._AnketId = value;
					this.SendPropertyChanged("AnketId");
					this.OnAnketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DocType
		{
			get
			{
				return this._DocType;
			}
			set
			{
				if ((this._DocType != value))
				{
					this.OnDocTypeChanging(value);
					this.SendPropertyChanging();
					this._DocType = value;
					this.SendPropertyChanged("DocType");
					this.OnDocTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="VarChar(200)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Anket_AnketDoc", Storage="_Anket", ThisKey="AnketId", OtherKey="AnketId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Anket Anket
		{
			get
			{
				return this._Anket.Entity;
			}
			set
			{
				Anket previousValue = this._Anket.Entity;
				if (((previousValue != value) 
							|| (this._Anket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Anket.Entity = null;
						previousValue.AnketDocs.Remove(this);
					}
					this._Anket.Entity = value;
					if ((value != null))
					{
						value.AnketDocs.Add(this);
						this._AnketId = value.AnketId;
					}
					else
					{
						this._AnketId = default(int);
					}
					this.SendPropertyChanged("Anket");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AnketRels")]
	public partial class AnketRel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AnketRelId;
		
		private int _AnketId;
		
		private int _RelTypeId;
		
		private System.Nullable<int> _PopulId;
		
		private string _Origin;
		
		private string _BirthPlace;
		
		private int _LinguaId;
		
		private EntityRef<Anket> _Anket;
		
		private EntityRef<List> _List;
		
		private EntityRef<Popul> _Popul;
		
		private EntityRef<List> _List1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnketRelIdChanging(int value);
    partial void OnAnketRelIdChanged();
    partial void OnAnketIdChanging(int value);
    partial void OnAnketIdChanged();
    partial void OnRelTypeIdChanging(int value);
    partial void OnRelTypeIdChanged();
    partial void OnPopulIdChanging(System.Nullable<int> value);
    partial void OnPopulIdChanged();
    partial void OnOriginChanging(string value);
    partial void OnOriginChanged();
    partial void OnBirthPlaceChanging(string value);
    partial void OnBirthPlaceChanged();
    partial void OnLinguaIdChanging(int value);
    partial void OnLinguaIdChanged();
    #endregion
		
		public AnketRel()
		{
			this._Anket = default(EntityRef<Anket>);
			this._List = default(EntityRef<List>);
			this._Popul = default(EntityRef<Popul>);
			this._List1 = default(EntityRef<List>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnketRelId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AnketRelId
		{
			get
			{
				return this._AnketRelId;
			}
			set
			{
				if ((this._AnketRelId != value))
				{
					this.OnAnketRelIdChanging(value);
					this.SendPropertyChanging();
					this._AnketRelId = value;
					this.SendPropertyChanged("AnketRelId");
					this.OnAnketRelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnketId", DbType="Int NOT NULL")]
		public int AnketId
		{
			get
			{
				return this._AnketId;
			}
			set
			{
				if ((this._AnketId != value))
				{
					if (this._Anket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnketIdChanging(value);
					this.SendPropertyChanging();
					this._AnketId = value;
					this.SendPropertyChanged("AnketId");
					this.OnAnketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelTypeId", DbType="Int NOT NULL")]
		public int RelTypeId
		{
			get
			{
				return this._RelTypeId;
			}
			set
			{
				if ((this._RelTypeId != value))
				{
					if (this._List1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRelTypeIdChanging(value);
					this.SendPropertyChanging();
					this._RelTypeId = value;
					this.SendPropertyChanged("RelTypeId");
					this.OnRelTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopulId", DbType="Int")]
		public System.Nullable<int> PopulId
		{
			get
			{
				return this._PopulId;
			}
			set
			{
				if ((this._PopulId != value))
				{
					if (this._Popul.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPopulIdChanging(value);
					this.SendPropertyChanging();
					this._PopulId = value;
					this.SendPropertyChanged("PopulId");
					this.OnPopulIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Origin", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Origin
		{
			get
			{
				return this._Origin;
			}
			set
			{
				if ((this._Origin != value))
				{
					this.OnOriginChanging(value);
					this.SendPropertyChanging();
					this._Origin = value;
					this.SendPropertyChanged("Origin");
					this.OnOriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this.OnBirthPlaceChanging(value);
					this.SendPropertyChanging();
					this._BirthPlace = value;
					this.SendPropertyChanged("BirthPlace");
					this.OnBirthPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinguaId", DbType="Int NOT NULL")]
		public int LinguaId
		{
			get
			{
				return this._LinguaId;
			}
			set
			{
				if ((this._LinguaId != value))
				{
					if (this._List.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinguaIdChanging(value);
					this.SendPropertyChanging();
					this._LinguaId = value;
					this.SendPropertyChanged("LinguaId");
					this.OnLinguaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Anket_AnketRel", Storage="_Anket", ThisKey="AnketId", OtherKey="AnketId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Anket Anket
		{
			get
			{
				return this._Anket.Entity;
			}
			set
			{
				Anket previousValue = this._Anket.Entity;
				if (((previousValue != value) 
							|| (this._Anket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Anket.Entity = null;
						previousValue.AnketRels.Remove(this);
					}
					this._Anket.Entity = value;
					if ((value != null))
					{
						value.AnketRels.Add(this);
						this._AnketId = value.AnketId;
					}
					else
					{
						this._AnketId = default(int);
					}
					this.SendPropertyChanged("Anket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_AnketRel", Storage="_List", ThisKey="LinguaId", OtherKey="ListId", IsForeignKey=true)]
		public List Lingua
		{
			get
			{
				return this._List.Entity;
			}
			set
			{
				List previousValue = this._List.Entity;
				if (((previousValue != value) 
							|| (this._List.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._List.Entity = null;
						previousValue.AnketRels.Remove(this);
					}
					this._List.Entity = value;
					if ((value != null))
					{
						value.AnketRels.Add(this);
						this._LinguaId = value.ListId;
					}
					else
					{
						this._LinguaId = default(int);
					}
					this.SendPropertyChanged("Lingua");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Popul_AnketRel", Storage="_Popul", ThisKey="PopulId", OtherKey="PopulId", IsForeignKey=true)]
		public Popul Popul
		{
			get
			{
				return this._Popul.Entity;
			}
			set
			{
				Popul previousValue = this._Popul.Entity;
				if (((previousValue != value) 
							|| (this._Popul.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Popul.Entity = null;
						previousValue.AnketRels.Remove(this);
					}
					this._Popul.Entity = value;
					if ((value != null))
					{
						value.AnketRels.Add(this);
						this._PopulId = value.PopulId;
					}
					else
					{
						this._PopulId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Popul");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_AnketRel1", Storage="_List1", ThisKey="RelTypeId", OtherKey="ListId", IsForeignKey=true)]
		public List RelType
		{
			get
			{
				return this._List1.Entity;
			}
			set
			{
				List previousValue = this._List1.Entity;
				if (((previousValue != value) 
							|| (this._List1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._List1.Entity = null;
						previousValue.AnketRels1.Remove(this);
					}
					this._List1.Entity = value;
					if ((value != null))
					{
						value.AnketRels1.Add(this);
						this._RelTypeId = value.ListId;
					}
					else
					{
						this._RelTypeId = default(int);
					}
					this.SendPropertyChanged("RelType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stores")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreId;
		
		private string _Lab;
		
		private string _Fridge;
		
		private string _FridgeModule;
		
		private string _FridgeShelf;
		
		private string _Container;
		
		private EntitySet<Block> _Blocks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreIdChanging(int value);
    partial void OnStoreIdChanged();
    partial void OnLabChanging(string value);
    partial void OnLabChanged();
    partial void OnFridgeChanging(string value);
    partial void OnFridgeChanged();
    partial void OnFridgeModuleChanging(string value);
    partial void OnFridgeModuleChanged();
    partial void OnFridgeShelfChanging(string value);
    partial void OnFridgeShelfChanged();
    partial void OnContainerChanging(string value);
    partial void OnContainerChanged();
    #endregion
		
		public Store()
		{
			this._Blocks = new EntitySet<Block>(new Action<Block>(this.attach_Blocks), new Action<Block>(this.detach_Blocks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lab", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Lab
		{
			get
			{
				return this._Lab;
			}
			set
			{
				if ((this._Lab != value))
				{
					this.OnLabChanging(value);
					this.SendPropertyChanging();
					this._Lab = value;
					this.SendPropertyChanged("Lab");
					this.OnLabChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fridge", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Fridge
		{
			get
			{
				return this._Fridge;
			}
			set
			{
				if ((this._Fridge != value))
				{
					this.OnFridgeChanging(value);
					this.SendPropertyChanging();
					this._Fridge = value;
					this.SendPropertyChanged("Fridge");
					this.OnFridgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FridgeModule", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FridgeModule
		{
			get
			{
				return this._FridgeModule;
			}
			set
			{
				if ((this._FridgeModule != value))
				{
					this.OnFridgeModuleChanging(value);
					this.SendPropertyChanging();
					this._FridgeModule = value;
					this.SendPropertyChanged("FridgeModule");
					this.OnFridgeModuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FridgeShelf", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FridgeShelf
		{
			get
			{
				return this._FridgeShelf;
			}
			set
			{
				if ((this._FridgeShelf != value))
				{
					this.OnFridgeShelfChanging(value);
					this.SendPropertyChanging();
					this._FridgeShelf = value;
					this.SendPropertyChanged("FridgeShelf");
					this.OnFridgeShelfChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Container", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Container
		{
			get
			{
				return this._Container;
			}
			set
			{
				if ((this._Container != value))
				{
					this.OnContainerChanging(value);
					this.SendPropertyChanging();
					this._Container = value;
					this.SendPropertyChanged("Container");
					this.OnContainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Block", Storage="_Blocks", ThisKey="StoreId", OtherKey="StoreId")]
		public EntitySet<Block> Blocks
		{
			get
			{
				return this._Blocks;
			}
			set
			{
				this._Blocks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Blocks(Block entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_Blocks(Block entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Consts")]
	public partial class Const : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Const()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Samples")]
	public partial class Sample : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleId;
		
		private int _AnketId;
		
		private int _SampleTypeId;
		
		private string _SampleCode;
		
		private EntitySet<SampleItem> _SampleItems;
		
		private EntitySet<DnkItem> _DnkItems;
		
		private EntitySet<Result> _Results;
		
		private EntityRef<Anket> _Anket;
		
		private EntityRef<List> _SampleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleIdChanging(int value);
    partial void OnSampleIdChanged();
    partial void OnAnketIdChanging(int value);
    partial void OnAnketIdChanged();
    partial void OnSampleTypeIdChanging(int value);
    partial void OnSampleTypeIdChanged();
    partial void OnSampleCodeChanging(string value);
    partial void OnSampleCodeChanged();
    #endregion
		
		public Sample()
		{
			this._SampleItems = new EntitySet<SampleItem>(new Action<SampleItem>(this.attach_SampleItems), new Action<SampleItem>(this.detach_SampleItems));
			this._DnkItems = new EntitySet<DnkItem>(new Action<DnkItem>(this.attach_DnkItems), new Action<DnkItem>(this.detach_DnkItems));
			this._Results = new EntitySet<Result>(new Action<Result>(this.attach_Results), new Action<Result>(this.detach_Results));
			this._Anket = default(EntityRef<Anket>);
			this._SampleType = default(EntityRef<List>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SampleId
		{
			get
			{
				return this._SampleId;
			}
			set
			{
				if ((this._SampleId != value))
				{
					this.OnSampleIdChanging(value);
					this.SendPropertyChanging();
					this._SampleId = value;
					this.SendPropertyChanged("SampleId");
					this.OnSampleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnketId", DbType="Int NOT NULL")]
		public int AnketId
		{
			get
			{
				return this._AnketId;
			}
			set
			{
				if ((this._AnketId != value))
				{
					if (this._Anket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnketIdChanging(value);
					this.SendPropertyChanging();
					this._AnketId = value;
					this.SendPropertyChanged("AnketId");
					this.OnAnketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTypeId", DbType="Int NOT NULL")]
		public int SampleTypeId
		{
			get
			{
				return this._SampleTypeId;
			}
			set
			{
				if ((this._SampleTypeId != value))
				{
					if (this._SampleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSampleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SampleTypeId = value;
					this.SendPropertyChanged("SampleTypeId");
					this.OnSampleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleCode", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SampleCode
		{
			get
			{
				return this._SampleCode;
			}
			set
			{
				if ((this._SampleCode != value))
				{
					this.OnSampleCodeChanging(value);
					this.SendPropertyChanging();
					this._SampleCode = value;
					this.SendPropertyChanged("SampleCode");
					this.OnSampleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sample_SampleItem", Storage="_SampleItems", ThisKey="SampleId", OtherKey="SampleId")]
		public EntitySet<SampleItem> SampleItems
		{
			get
			{
				return this._SampleItems;
			}
			set
			{
				this._SampleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sample_DnkItem", Storage="_DnkItems", ThisKey="SampleId", OtherKey="SampleId")]
		public EntitySet<DnkItem> DnkItems
		{
			get
			{
				return this._DnkItems;
			}
			set
			{
				this._DnkItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sample_Result", Storage="_Results", ThisKey="SampleId", OtherKey="SampleId")]
		public EntitySet<Result> Results
		{
			get
			{
				return this._Results;
			}
			set
			{
				this._Results.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Anket_Sample", Storage="_Anket", ThisKey="AnketId", OtherKey="AnketId", IsForeignKey=true)]
		public Anket Anket
		{
			get
			{
				return this._Anket.Entity;
			}
			set
			{
				Anket previousValue = this._Anket.Entity;
				if (((previousValue != value) 
							|| (this._Anket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Anket.Entity = null;
						previousValue.Samples.Remove(this);
					}
					this._Anket.Entity = value;
					if ((value != null))
					{
						value.Samples.Add(this);
						this._AnketId = value.AnketId;
					}
					else
					{
						this._AnketId = default(int);
					}
					this.SendPropertyChanged("Anket");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_Sample", Storage="_SampleType", ThisKey="SampleTypeId", OtherKey="ListId", IsForeignKey=true)]
		public List SampleType
		{
			get
			{
				return this._SampleType.Entity;
			}
			set
			{
				List previousValue = this._SampleType.Entity;
				if (((previousValue != value) 
							|| (this._SampleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SampleType.Entity = null;
						previousValue.Samples.Remove(this);
					}
					this._SampleType.Entity = value;
					if ((value != null))
					{
						value.Samples.Add(this);
						this._SampleTypeId = value.ListId;
					}
					else
					{
						this._SampleTypeId = default(int);
					}
					this.SendPropertyChanged("SampleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SampleItems(SampleItem entity)
		{
			this.SendPropertyChanging();
			entity.Sample = this;
		}
		
		private void detach_SampleItems(SampleItem entity)
		{
			this.SendPropertyChanging();
			entity.Sample = null;
		}
		
		private void attach_DnkItems(DnkItem entity)
		{
			this.SendPropertyChanging();
			entity.Sample = this;
		}
		
		private void detach_DnkItems(DnkItem entity)
		{
			this.SendPropertyChanging();
			entity.Sample = null;
		}
		
		private void attach_Results(Result entity)
		{
			this.SendPropertyChanging();
			entity.Sample = this;
		}
		
		private void detach_Results(Result entity)
		{
			this.SendPropertyChanging();
			entity.Sample = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Blocks")]
	public partial class Block : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlockId;
		
		private string _BlockType;
		
		private string _BlockCode;
		
		private System.Nullable<int> _StoreId;
		
		private int _DimX;
		
		private int _DimY;
		
		private EntitySet<BlockItem> _BlockItems;
		
		private EntityRef<Store> _Store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlockIdChanging(int value);
    partial void OnBlockIdChanged();
    partial void OnBlockTypeChanging(string value);
    partial void OnBlockTypeChanged();
    partial void OnBlockCodeChanging(string value);
    partial void OnBlockCodeChanged();
    partial void OnStoreIdChanging(System.Nullable<int> value);
    partial void OnStoreIdChanged();
    partial void OnDimXChanging(int value);
    partial void OnDimXChanged();
    partial void OnDimYChanging(int value);
    partial void OnDimYChanged();
    #endregion
		
		public Block()
		{
			this._BlockItems = new EntitySet<BlockItem>(new Action<BlockItem>(this.attach_BlockItems), new Action<BlockItem>(this.detach_BlockItems));
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlockId
		{
			get
			{
				return this._BlockId;
			}
			set
			{
				if ((this._BlockId != value))
				{
					this.OnBlockIdChanging(value);
					this.SendPropertyChanging();
					this._BlockId = value;
					this.SendPropertyChanged("BlockId");
					this.OnBlockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string BlockType
		{
			get
			{
				return this._BlockType;
			}
			set
			{
				if ((this._BlockType != value))
				{
					this.OnBlockTypeChanging(value);
					this.SendPropertyChanging();
					this._BlockType = value;
					this.SendPropertyChanged("BlockType");
					this.OnBlockTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockCode", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BlockCode
		{
			get
			{
				return this._BlockCode;
			}
			set
			{
				if ((this._BlockCode != value))
				{
					this.OnBlockCodeChanging(value);
					this.SendPropertyChanging();
					this._BlockCode = value;
					this.SendPropertyChanged("BlockCode");
					this.OnBlockCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreId", DbType="Int")]
		public System.Nullable<int> StoreId
		{
			get
			{
				return this._StoreId;
			}
			set
			{
				if ((this._StoreId != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIdChanging(value);
					this.SendPropertyChanging();
					this._StoreId = value;
					this.SendPropertyChanged("StoreId");
					this.OnStoreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimX", DbType="Int NOT NULL")]
		public int DimX
		{
			get
			{
				return this._DimX;
			}
			set
			{
				if ((this._DimX != value))
				{
					this.OnDimXChanging(value);
					this.SendPropertyChanging();
					this._DimX = value;
					this.SendPropertyChanged("DimX");
					this.OnDimXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DimY", DbType="Int NOT NULL")]
		public int DimY
		{
			get
			{
				return this._DimY;
			}
			set
			{
				if ((this._DimY != value))
				{
					this.OnDimYChanging(value);
					this.SendPropertyChanging();
					this._DimY = value;
					this.SendPropertyChanged("DimY");
					this.OnDimYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Block_BlockItem", Storage="_BlockItems", ThisKey="BlockId", OtherKey="BlockId")]
		public EntitySet<BlockItem> BlockItems
		{
			get
			{
				return this._BlockItems;
			}
			set
			{
				this._BlockItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Block", Storage="_Store", ThisKey="StoreId", OtherKey="StoreId", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.Blocks.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.Blocks.Add(this);
						this._StoreId = value.StoreId;
					}
					else
					{
						this._StoreId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlockItems(BlockItem entity)
		{
			this.SendPropertyChanging();
			entity.Block = this;
		}
		
		private void detach_BlockItems(BlockItem entity)
		{
			this.SendPropertyChanging();
			entity.Block = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlockItems")]
	public partial class BlockItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BlockItemId;
		
		private int _BlockId;
		
		private string _BlockItemCode;
		
		private EntitySet<SampleItem> _SampleItems;
		
		private EntitySet<DnkItem> _DnkItems;
		
		private EntityRef<Block> _Block;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBlockItemIdChanging(int value);
    partial void OnBlockItemIdChanged();
    partial void OnBlockIdChanging(int value);
    partial void OnBlockIdChanged();
    partial void OnBlockItemCodeChanging(string value);
    partial void OnBlockItemCodeChanged();
    #endregion
		
		public BlockItem()
		{
			this._SampleItems = new EntitySet<SampleItem>(new Action<SampleItem>(this.attach_SampleItems), new Action<SampleItem>(this.detach_SampleItems));
			this._DnkItems = new EntitySet<DnkItem>(new Action<DnkItem>(this.attach_DnkItems), new Action<DnkItem>(this.detach_DnkItems));
			this._Block = default(EntityRef<Block>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BlockItemId
		{
			get
			{
				return this._BlockItemId;
			}
			set
			{
				if ((this._BlockItemId != value))
				{
					this.OnBlockItemIdChanging(value);
					this.SendPropertyChanging();
					this._BlockItemId = value;
					this.SendPropertyChanged("BlockItemId");
					this.OnBlockItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockId", DbType="Int NOT NULL")]
		public int BlockId
		{
			get
			{
				return this._BlockId;
			}
			set
			{
				if ((this._BlockId != value))
				{
					if (this._Block.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockIdChanging(value);
					this.SendPropertyChanging();
					this._BlockId = value;
					this.SendPropertyChanged("BlockId");
					this.OnBlockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockItemCode", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string BlockItemCode
		{
			get
			{
				return this._BlockItemCode;
			}
			set
			{
				if ((this._BlockItemCode != value))
				{
					this.OnBlockItemCodeChanging(value);
					this.SendPropertyChanging();
					this._BlockItemCode = value;
					this.SendPropertyChanged("BlockItemCode");
					this.OnBlockItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlockItem_SampleItem", Storage="_SampleItems", ThisKey="BlockItemId", OtherKey="BlockItemId")]
		public EntitySet<SampleItem> SampleItems
		{
			get
			{
				return this._SampleItems;
			}
			set
			{
				this._SampleItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlockItem_DnkItem", Storage="_DnkItems", ThisKey="BlockItemId", OtherKey="BlockItemId")]
		public EntitySet<DnkItem> DnkItems
		{
			get
			{
				return this._DnkItems;
			}
			set
			{
				this._DnkItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Block_BlockItem", Storage="_Block", ThisKey="BlockId", OtherKey="BlockId", IsForeignKey=true)]
		public Block Block
		{
			get
			{
				return this._Block.Entity;
			}
			set
			{
				Block previousValue = this._Block.Entity;
				if (((previousValue != value) 
							|| (this._Block.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Block.Entity = null;
						previousValue.BlockItems.Remove(this);
					}
					this._Block.Entity = value;
					if ((value != null))
					{
						value.BlockItems.Add(this);
						this._BlockId = value.BlockId;
					}
					else
					{
						this._BlockId = default(int);
					}
					this.SendPropertyChanged("Block");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SampleItems(SampleItem entity)
		{
			this.SendPropertyChanging();
			entity.BlockItem = this;
		}
		
		private void detach_SampleItems(SampleItem entity)
		{
			this.SendPropertyChanging();
			entity.BlockItem = null;
		}
		
		private void attach_DnkItems(DnkItem entity)
		{
			this.SendPropertyChanging();
			entity.BlockItem = this;
		}
		
		private void detach_DnkItems(DnkItem entity)
		{
			this.SendPropertyChanging();
			entity.BlockItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SampleItems")]
	public partial class SampleItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SampleItemId;
		
		private int _SampleId;
		
		private int _SampleItemTypeId;
		
		private System.Nullable<int> _BlockItemId;
		
		private string _Comment;
		
		private EntityRef<BlockItem> _BlockItem;
		
		private EntityRef<Sample> _Sample;
		
		private EntityRef<List> _SampleItemType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSampleItemIdChanging(int value);
    partial void OnSampleItemIdChanged();
    partial void OnSampleIdChanging(int value);
    partial void OnSampleIdChanged();
    partial void OnSampleItemTypeIdChanging(int value);
    partial void OnSampleItemTypeIdChanged();
    partial void OnBlockItemIdChanging(System.Nullable<int> value);
    partial void OnBlockItemIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public SampleItem()
		{
			this._BlockItem = default(EntityRef<BlockItem>);
			this._Sample = default(EntityRef<Sample>);
			this._SampleItemType = default(EntityRef<List>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SampleItemId
		{
			get
			{
				return this._SampleItemId;
			}
			set
			{
				if ((this._SampleItemId != value))
				{
					this.OnSampleItemIdChanging(value);
					this.SendPropertyChanging();
					this._SampleItemId = value;
					this.SendPropertyChanged("SampleItemId");
					this.OnSampleItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleId", DbType="Int NOT NULL")]
		public int SampleId
		{
			get
			{
				return this._SampleId;
			}
			set
			{
				if ((this._SampleId != value))
				{
					if (this._Sample.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSampleIdChanging(value);
					this.SendPropertyChanging();
					this._SampleId = value;
					this.SendPropertyChanged("SampleId");
					this.OnSampleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleItemTypeId", DbType="Int NOT NULL")]
		public int SampleItemTypeId
		{
			get
			{
				return this._SampleItemTypeId;
			}
			set
			{
				if ((this._SampleItemTypeId != value))
				{
					if (this._SampleItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSampleItemTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SampleItemTypeId = value;
					this.SendPropertyChanged("SampleItemTypeId");
					this.OnSampleItemTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockItemId", DbType="Int")]
		public System.Nullable<int> BlockItemId
		{
			get
			{
				return this._BlockItemId;
			}
			set
			{
				if ((this._BlockItemId != value))
				{
					if (this._BlockItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockItemIdChanging(value);
					this.SendPropertyChanging();
					this._BlockItemId = value;
					this.SendPropertyChanged("BlockItemId");
					this.OnBlockItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlockItem_SampleItem", Storage="_BlockItem", ThisKey="BlockItemId", OtherKey="BlockItemId", IsForeignKey=true)]
		public BlockItem BlockItem
		{
			get
			{
				return this._BlockItem.Entity;
			}
			set
			{
				BlockItem previousValue = this._BlockItem.Entity;
				if (((previousValue != value) 
							|| (this._BlockItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlockItem.Entity = null;
						previousValue.SampleItems.Remove(this);
					}
					this._BlockItem.Entity = value;
					if ((value != null))
					{
						value.SampleItems.Add(this);
						this._BlockItemId = value.BlockItemId;
					}
					else
					{
						this._BlockItemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BlockItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sample_SampleItem", Storage="_Sample", ThisKey="SampleId", OtherKey="SampleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Sample Sample
		{
			get
			{
				return this._Sample.Entity;
			}
			set
			{
				Sample previousValue = this._Sample.Entity;
				if (((previousValue != value) 
							|| (this._Sample.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sample.Entity = null;
						previousValue.SampleItems.Remove(this);
					}
					this._Sample.Entity = value;
					if ((value != null))
					{
						value.SampleItems.Add(this);
						this._SampleId = value.SampleId;
					}
					else
					{
						this._SampleId = default(int);
					}
					this.SendPropertyChanged("Sample");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_SampleItem", Storage="_SampleItemType", ThisKey="SampleItemTypeId", OtherKey="ListId", IsForeignKey=true)]
		public List SampleItemType
		{
			get
			{
				return this._SampleItemType.Entity;
			}
			set
			{
				List previousValue = this._SampleItemType.Entity;
				if (((previousValue != value) 
							|| (this._SampleItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SampleItemType.Entity = null;
						previousValue.SampleItems.Remove(this);
					}
					this._SampleItemType.Entity = value;
					if ((value != null))
					{
						value.SampleItems.Add(this);
						this._SampleItemTypeId = value.ListId;
					}
					else
					{
						this._SampleItemTypeId = default(int);
					}
					this.SendPropertyChanged("SampleItemType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DnkItems")]
	public partial class DnkItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DnkItemId;
		
		private int _SampleId;
		
		private int _DnkItemTypeId;
		
		private System.Nullable<int> _BlockItemId;
		
		private double _Concentration;
		
		private double _Quality;
		
		private double _Volume;
		
		private int _ExtractMethodId;
		
		private string _Comment;
		
		private EntityRef<List> _ExtractMethod;
		
		private EntityRef<BlockItem> _BlockItem;
		
		private EntityRef<Sample> _Sample;
		
		private EntityRef<List> _DnkItemType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDnkItemIdChanging(int value);
    partial void OnDnkItemIdChanged();
    partial void OnSampleIdChanging(int value);
    partial void OnSampleIdChanged();
    partial void OnDnkItemTypeIdChanging(int value);
    partial void OnDnkItemTypeIdChanged();
    partial void OnBlockItemIdChanging(System.Nullable<int> value);
    partial void OnBlockItemIdChanged();
    partial void OnConcentrationChanging(double value);
    partial void OnConcentrationChanged();
    partial void OnQualityChanging(double value);
    partial void OnQualityChanged();
    partial void OnVolumeChanging(double value);
    partial void OnVolumeChanged();
    partial void OnExtractMethodIdChanging(int value);
    partial void OnExtractMethodIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public DnkItem()
		{
			this._ExtractMethod = default(EntityRef<List>);
			this._BlockItem = default(EntityRef<BlockItem>);
			this._Sample = default(EntityRef<Sample>);
			this._DnkItemType = default(EntityRef<List>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DnkItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DnkItemId
		{
			get
			{
				return this._DnkItemId;
			}
			set
			{
				if ((this._DnkItemId != value))
				{
					this.OnDnkItemIdChanging(value);
					this.SendPropertyChanging();
					this._DnkItemId = value;
					this.SendPropertyChanged("DnkItemId");
					this.OnDnkItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleId", DbType="Int NOT NULL")]
		public int SampleId
		{
			get
			{
				return this._SampleId;
			}
			set
			{
				if ((this._SampleId != value))
				{
					if (this._Sample.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSampleIdChanging(value);
					this.SendPropertyChanging();
					this._SampleId = value;
					this.SendPropertyChanged("SampleId");
					this.OnSampleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DnkItemTypeId", DbType="Int NOT NULL")]
		public int DnkItemTypeId
		{
			get
			{
				return this._DnkItemTypeId;
			}
			set
			{
				if ((this._DnkItemTypeId != value))
				{
					if (this._DnkItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDnkItemTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DnkItemTypeId = value;
					this.SendPropertyChanged("DnkItemTypeId");
					this.OnDnkItemTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BlockItemId", DbType="Int")]
		public System.Nullable<int> BlockItemId
		{
			get
			{
				return this._BlockItemId;
			}
			set
			{
				if ((this._BlockItemId != value))
				{
					if (this._BlockItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBlockItemIdChanging(value);
					this.SendPropertyChanging();
					this._BlockItemId = value;
					this.SendPropertyChanged("BlockItemId");
					this.OnBlockItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Concentration", DbType="Float NOT NULL")]
		public double Concentration
		{
			get
			{
				return this._Concentration;
			}
			set
			{
				if ((this._Concentration != value))
				{
					this.OnConcentrationChanging(value);
					this.SendPropertyChanging();
					this._Concentration = value;
					this.SendPropertyChanged("Concentration");
					this.OnConcentrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quality", DbType="Float NOT NULL")]
		public double Quality
		{
			get
			{
				return this._Quality;
			}
			set
			{
				if ((this._Quality != value))
				{
					this.OnQualityChanging(value);
					this.SendPropertyChanging();
					this._Quality = value;
					this.SendPropertyChanged("Quality");
					this.OnQualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Float NOT NULL")]
		public double Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtractMethodId", DbType="Int NOT NULL")]
		public int ExtractMethodId
		{
			get
			{
				return this._ExtractMethodId;
			}
			set
			{
				if ((this._ExtractMethodId != value))
				{
					if (this._ExtractMethod.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExtractMethodIdChanging(value);
					this.SendPropertyChanging();
					this._ExtractMethodId = value;
					this.SendPropertyChanged("ExtractMethodId");
					this.OnExtractMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_DnkItem", Storage="_ExtractMethod", ThisKey="ExtractMethodId", OtherKey="ListId", IsForeignKey=true)]
		public List ExtractMethod
		{
			get
			{
				return this._ExtractMethod.Entity;
			}
			set
			{
				List previousValue = this._ExtractMethod.Entity;
				if (((previousValue != value) 
							|| (this._ExtractMethod.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExtractMethod.Entity = null;
						previousValue.DnkItems.Remove(this);
					}
					this._ExtractMethod.Entity = value;
					if ((value != null))
					{
						value.DnkItems.Add(this);
						this._ExtractMethodId = value.ListId;
					}
					else
					{
						this._ExtractMethodId = default(int);
					}
					this.SendPropertyChanged("ExtractMethod");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlockItem_DnkItem", Storage="_BlockItem", ThisKey="BlockItemId", OtherKey="BlockItemId", IsForeignKey=true)]
		public BlockItem BlockItem
		{
			get
			{
				return this._BlockItem.Entity;
			}
			set
			{
				BlockItem previousValue = this._BlockItem.Entity;
				if (((previousValue != value) 
							|| (this._BlockItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlockItem.Entity = null;
						previousValue.DnkItems.Remove(this);
					}
					this._BlockItem.Entity = value;
					if ((value != null))
					{
						value.DnkItems.Add(this);
						this._BlockItemId = value.BlockItemId;
					}
					else
					{
						this._BlockItemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("BlockItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sample_DnkItem", Storage="_Sample", ThisKey="SampleId", OtherKey="SampleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Sample Sample
		{
			get
			{
				return this._Sample.Entity;
			}
			set
			{
				Sample previousValue = this._Sample.Entity;
				if (((previousValue != value) 
							|| (this._Sample.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sample.Entity = null;
						previousValue.DnkItems.Remove(this);
					}
					this._Sample.Entity = value;
					if ((value != null))
					{
						value.DnkItems.Add(this);
						this._SampleId = value.SampleId;
					}
					else
					{
						this._SampleId = default(int);
					}
					this.SendPropertyChanged("Sample");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="List_DnkItem1", Storage="_DnkItemType", ThisKey="DnkItemTypeId", OtherKey="ListId", IsForeignKey=true)]
		public List DnkItemType
		{
			get
			{
				return this._DnkItemType.Entity;
			}
			set
			{
				List previousValue = this._DnkItemType.Entity;
				if (((previousValue != value) 
							|| (this._DnkItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DnkItemType.Entity = null;
						previousValue.DnkItems1.Remove(this);
					}
					this._DnkItemType.Entity = value;
					if ((value != null))
					{
						value.DnkItems1.Add(this);
						this._DnkItemTypeId = value.ListId;
					}
					else
					{
						this._DnkItemTypeId = default(int);
					}
					this.SendPropertyChanged("DnkItemType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Results")]
	public partial class Result : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResultId;
		
		private int _SampleId;
		
		private byte _ResultType;
		
		private int _PopulId;
		
		private string _Prediction;
		
		private double _Probability;
		
		private string _Haplogroup;
		
		private string _Marker;
		
		private string _Comment;
		
		private System.Nullable<double> _GWS1;
		
		private System.Nullable<double> _GWS2;
		
		private System.Nullable<double> _B_DYS389I;
		
		private System.Nullable<double> _B_DYS389II;
		
		private System.Nullable<double> _B_DYS390;
		
		private System.Nullable<double> _B_DYS456;
		
		private System.Nullable<double> _G_DYS19;
		
		private System.Nullable<double> _G_DYS385;
		
		private System.Nullable<double> _G_DYS385_2;
		
		private System.Nullable<double> _G_DYS458;
		
		private System.Nullable<double> _R_DYS437;
		
		private System.Nullable<double> _R_DYS438;
		
		private System.Nullable<double> _R_DYS448;
		
		private System.Nullable<double> _R_Y_GATA_H4;
		
		private System.Nullable<double> _Y_DYS391;
		
		private System.Nullable<double> _Y_DYS392;
		
		private System.Nullable<double> _Y_DYS393;
		
		private System.Nullable<double> _Y_DYS439;
		
		private System.Nullable<double> _Y_DYS635;
		
		private System.Nullable<double> _DYS449;
		
		private System.Nullable<double> _DYS460;
		
		private System.Nullable<double> _DYS481;
		
		private System.Nullable<double> _DYS518;
		
		private System.Nullable<double> _DYS533;
		
		private System.Nullable<double> _DYS570;
		
		private System.Nullable<double> _DYS576;
		
		private System.Nullable<double> _DYS627;
		
		private System.Nullable<double> _DYF387S1;
		
		private System.Nullable<double> _DYS447;
		
		private EntityRef<Popul> _Popul;
		
		private EntityRef<Sample> _Sample;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResultIdChanging(int value);
    partial void OnResultIdChanged();
    partial void OnSampleIdChanging(int value);
    partial void OnSampleIdChanged();
    partial void OnResultTypeChanging(byte value);
    partial void OnResultTypeChanged();
    partial void OnPopulIdChanging(int value);
    partial void OnPopulIdChanged();
    partial void OnPredictionChanging(string value);
    partial void OnPredictionChanged();
    partial void OnProbabilityChanging(double value);
    partial void OnProbabilityChanged();
    partial void OnHaplogroupChanging(string value);
    partial void OnHaplogroupChanged();
    partial void OnMarkerChanging(string value);
    partial void OnMarkerChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnGWS1Changing(System.Nullable<double> value);
    partial void OnGWS1Changed();
    partial void OnGWS2Changing(System.Nullable<double> value);
    partial void OnGWS2Changed();
    partial void OnB_DYS389IChanging(System.Nullable<double> value);
    partial void OnB_DYS389IChanged();
    partial void OnB_DYS389IIChanging(System.Nullable<double> value);
    partial void OnB_DYS389IIChanged();
    partial void OnB_DYS390Changing(System.Nullable<double> value);
    partial void OnB_DYS390Changed();
    partial void OnB_DYS456Changing(System.Nullable<double> value);
    partial void OnB_DYS456Changed();
    partial void OnG_DYS19Changing(System.Nullable<double> value);
    partial void OnG_DYS19Changed();
    partial void OnG_DYS385Changing(System.Nullable<double> value);
    partial void OnG_DYS385Changed();
    partial void OnG_DYS385_2Changing(System.Nullable<double> value);
    partial void OnG_DYS385_2Changed();
    partial void OnG_DYS458Changing(System.Nullable<double> value);
    partial void OnG_DYS458Changed();
    partial void OnR_DYS437Changing(System.Nullable<double> value);
    partial void OnR_DYS437Changed();
    partial void OnR_DYS438Changing(System.Nullable<double> value);
    partial void OnR_DYS438Changed();
    partial void OnR_DYS448Changing(System.Nullable<double> value);
    partial void OnR_DYS448Changed();
    partial void OnR_Y_GATA_H4Changing(System.Nullable<double> value);
    partial void OnR_Y_GATA_H4Changed();
    partial void OnY_DYS391Changing(System.Nullable<double> value);
    partial void OnY_DYS391Changed();
    partial void OnY_DYS392Changing(System.Nullable<double> value);
    partial void OnY_DYS392Changed();
    partial void OnY_DYS393Changing(System.Nullable<double> value);
    partial void OnY_DYS393Changed();
    partial void OnY_DYS439Changing(System.Nullable<double> value);
    partial void OnY_DYS439Changed();
    partial void OnY_DYS635Changing(System.Nullable<double> value);
    partial void OnY_DYS635Changed();
    partial void OnDYS449Changing(System.Nullable<double> value);
    partial void OnDYS449Changed();
    partial void OnDYS460Changing(System.Nullable<double> value);
    partial void OnDYS460Changed();
    partial void OnDYS481Changing(System.Nullable<double> value);
    partial void OnDYS481Changed();
    partial void OnDYS518Changing(System.Nullable<double> value);
    partial void OnDYS518Changed();
    partial void OnDYS533Changing(System.Nullable<double> value);
    partial void OnDYS533Changed();
    partial void OnDYS570Changing(System.Nullable<double> value);
    partial void OnDYS570Changed();
    partial void OnDYS576Changing(System.Nullable<double> value);
    partial void OnDYS576Changed();
    partial void OnDYS627Changing(System.Nullable<double> value);
    partial void OnDYS627Changed();
    partial void OnDYF387S1Changing(System.Nullable<double> value);
    partial void OnDYF387S1Changed();
    partial void OnDYS447Changing(System.Nullable<double> value);
    partial void OnDYS447Changed();
    #endregion
		
		public Result()
		{
			this._Popul = default(EntityRef<Popul>);
			this._Sample = default(EntityRef<Sample>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResultId
		{
			get
			{
				return this._ResultId;
			}
			set
			{
				if ((this._ResultId != value))
				{
					this.OnResultIdChanging(value);
					this.SendPropertyChanging();
					this._ResultId = value;
					this.SendPropertyChanged("ResultId");
					this.OnResultIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleId", DbType="Int NOT NULL")]
		public int SampleId
		{
			get
			{
				return this._SampleId;
			}
			set
			{
				if ((this._SampleId != value))
				{
					if (this._Sample.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSampleIdChanging(value);
					this.SendPropertyChanging();
					this._SampleId = value;
					this.SendPropertyChanged("SampleId");
					this.OnSampleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultType", DbType="TinyInt NOT NULL")]
		public byte ResultType
		{
			get
			{
				return this._ResultType;
			}
			set
			{
				if ((this._ResultType != value))
				{
					this.OnResultTypeChanging(value);
					this.SendPropertyChanging();
					this._ResultType = value;
					this.SendPropertyChanged("ResultType");
					this.OnResultTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopulId", DbType="Int NOT NULL")]
		public int PopulId
		{
			get
			{
				return this._PopulId;
			}
			set
			{
				if ((this._PopulId != value))
				{
					if (this._Popul.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPopulIdChanging(value);
					this.SendPropertyChanging();
					this._PopulId = value;
					this.SendPropertyChanged("PopulId");
					this.OnPopulIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prediction", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Prediction
		{
			get
			{
				return this._Prediction;
			}
			set
			{
				if ((this._Prediction != value))
				{
					this.OnPredictionChanging(value);
					this.SendPropertyChanging();
					this._Prediction = value;
					this.SendPropertyChanged("Prediction");
					this.OnPredictionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probability", DbType="Float NOT NULL")]
		public double Probability
		{
			get
			{
				return this._Probability;
			}
			set
			{
				if ((this._Probability != value))
				{
					this.OnProbabilityChanging(value);
					this.SendPropertyChanging();
					this._Probability = value;
					this.SendPropertyChanged("Probability");
					this.OnProbabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Haplogroup", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Haplogroup
		{
			get
			{
				return this._Haplogroup;
			}
			set
			{
				if ((this._Haplogroup != value))
				{
					this.OnHaplogroupChanging(value);
					this.SendPropertyChanging();
					this._Haplogroup = value;
					this.SendPropertyChanged("Haplogroup");
					this.OnHaplogroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marker", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Marker
		{
			get
			{
				return this._Marker;
			}
			set
			{
				if ((this._Marker != value))
				{
					this.OnMarkerChanging(value);
					this.SendPropertyChanging();
					this._Marker = value;
					this.SendPropertyChanged("Marker");
					this.OnMarkerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GWS1", DbType="Float")]
		public System.Nullable<double> GWS1
		{
			get
			{
				return this._GWS1;
			}
			set
			{
				if ((this._GWS1 != value))
				{
					this.OnGWS1Changing(value);
					this.SendPropertyChanging();
					this._GWS1 = value;
					this.SendPropertyChanged("GWS1");
					this.OnGWS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GWS2", DbType="Float")]
		public System.Nullable<double> GWS2
		{
			get
			{
				return this._GWS2;
			}
			set
			{
				if ((this._GWS2 != value))
				{
					this.OnGWS2Changing(value);
					this.SendPropertyChanging();
					this._GWS2 = value;
					this.SendPropertyChanged("GWS2");
					this.OnGWS2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_DYS389I", DbType="Float")]
		public System.Nullable<double> B_DYS389I
		{
			get
			{
				return this._B_DYS389I;
			}
			set
			{
				if ((this._B_DYS389I != value))
				{
					this.OnB_DYS389IChanging(value);
					this.SendPropertyChanging();
					this._B_DYS389I = value;
					this.SendPropertyChanged("B_DYS389I");
					this.OnB_DYS389IChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_DYS389II", DbType="Float")]
		public System.Nullable<double> B_DYS389II
		{
			get
			{
				return this._B_DYS389II;
			}
			set
			{
				if ((this._B_DYS389II != value))
				{
					this.OnB_DYS389IIChanging(value);
					this.SendPropertyChanging();
					this._B_DYS389II = value;
					this.SendPropertyChanged("B_DYS389II");
					this.OnB_DYS389IIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_DYS390", DbType="Float")]
		public System.Nullable<double> B_DYS390
		{
			get
			{
				return this._B_DYS390;
			}
			set
			{
				if ((this._B_DYS390 != value))
				{
					this.OnB_DYS390Changing(value);
					this.SendPropertyChanging();
					this._B_DYS390 = value;
					this.SendPropertyChanged("B_DYS390");
					this.OnB_DYS390Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_DYS456", DbType="Float")]
		public System.Nullable<double> B_DYS456
		{
			get
			{
				return this._B_DYS456;
			}
			set
			{
				if ((this._B_DYS456 != value))
				{
					this.OnB_DYS456Changing(value);
					this.SendPropertyChanging();
					this._B_DYS456 = value;
					this.SendPropertyChanged("B_DYS456");
					this.OnB_DYS456Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G_DYS19", DbType="Float")]
		public System.Nullable<double> G_DYS19
		{
			get
			{
				return this._G_DYS19;
			}
			set
			{
				if ((this._G_DYS19 != value))
				{
					this.OnG_DYS19Changing(value);
					this.SendPropertyChanging();
					this._G_DYS19 = value;
					this.SendPropertyChanged("G_DYS19");
					this.OnG_DYS19Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G_DYS385", DbType="Float")]
		public System.Nullable<double> G_DYS385
		{
			get
			{
				return this._G_DYS385;
			}
			set
			{
				if ((this._G_DYS385 != value))
				{
					this.OnG_DYS385Changing(value);
					this.SendPropertyChanging();
					this._G_DYS385 = value;
					this.SendPropertyChanged("G_DYS385");
					this.OnG_DYS385Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G_DYS385_2", DbType="Float")]
		public System.Nullable<double> G_DYS385_2
		{
			get
			{
				return this._G_DYS385_2;
			}
			set
			{
				if ((this._G_DYS385_2 != value))
				{
					this.OnG_DYS385_2Changing(value);
					this.SendPropertyChanging();
					this._G_DYS385_2 = value;
					this.SendPropertyChanged("G_DYS385_2");
					this.OnG_DYS385_2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G_DYS458", DbType="Float")]
		public System.Nullable<double> G_DYS458
		{
			get
			{
				return this._G_DYS458;
			}
			set
			{
				if ((this._G_DYS458 != value))
				{
					this.OnG_DYS458Changing(value);
					this.SendPropertyChanging();
					this._G_DYS458 = value;
					this.SendPropertyChanged("G_DYS458");
					this.OnG_DYS458Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_DYS437", DbType="Float")]
		public System.Nullable<double> R_DYS437
		{
			get
			{
				return this._R_DYS437;
			}
			set
			{
				if ((this._R_DYS437 != value))
				{
					this.OnR_DYS437Changing(value);
					this.SendPropertyChanging();
					this._R_DYS437 = value;
					this.SendPropertyChanged("R_DYS437");
					this.OnR_DYS437Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_DYS438", DbType="Float")]
		public System.Nullable<double> R_DYS438
		{
			get
			{
				return this._R_DYS438;
			}
			set
			{
				if ((this._R_DYS438 != value))
				{
					this.OnR_DYS438Changing(value);
					this.SendPropertyChanging();
					this._R_DYS438 = value;
					this.SendPropertyChanged("R_DYS438");
					this.OnR_DYS438Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_DYS448", DbType="Float")]
		public System.Nullable<double> R_DYS448
		{
			get
			{
				return this._R_DYS448;
			}
			set
			{
				if ((this._R_DYS448 != value))
				{
					this.OnR_DYS448Changing(value);
					this.SendPropertyChanging();
					this._R_DYS448 = value;
					this.SendPropertyChanged("R_DYS448");
					this.OnR_DYS448Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_R_Y_GATA_H4", DbType="Float")]
		public System.Nullable<double> R_Y_GATA_H4
		{
			get
			{
				return this._R_Y_GATA_H4;
			}
			set
			{
				if ((this._R_Y_GATA_H4 != value))
				{
					this.OnR_Y_GATA_H4Changing(value);
					this.SendPropertyChanging();
					this._R_Y_GATA_H4 = value;
					this.SendPropertyChanged("R_Y_GATA_H4");
					this.OnR_Y_GATA_H4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y_DYS391", DbType="Float")]
		public System.Nullable<double> Y_DYS391
		{
			get
			{
				return this._Y_DYS391;
			}
			set
			{
				if ((this._Y_DYS391 != value))
				{
					this.OnY_DYS391Changing(value);
					this.SendPropertyChanging();
					this._Y_DYS391 = value;
					this.SendPropertyChanged("Y_DYS391");
					this.OnY_DYS391Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y_DYS392", DbType="Float")]
		public System.Nullable<double> Y_DYS392
		{
			get
			{
				return this._Y_DYS392;
			}
			set
			{
				if ((this._Y_DYS392 != value))
				{
					this.OnY_DYS392Changing(value);
					this.SendPropertyChanging();
					this._Y_DYS392 = value;
					this.SendPropertyChanged("Y_DYS392");
					this.OnY_DYS392Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y_DYS393", DbType="Float")]
		public System.Nullable<double> Y_DYS393
		{
			get
			{
				return this._Y_DYS393;
			}
			set
			{
				if ((this._Y_DYS393 != value))
				{
					this.OnY_DYS393Changing(value);
					this.SendPropertyChanging();
					this._Y_DYS393 = value;
					this.SendPropertyChanged("Y_DYS393");
					this.OnY_DYS393Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y_DYS439", DbType="Float")]
		public System.Nullable<double> Y_DYS439
		{
			get
			{
				return this._Y_DYS439;
			}
			set
			{
				if ((this._Y_DYS439 != value))
				{
					this.OnY_DYS439Changing(value);
					this.SendPropertyChanging();
					this._Y_DYS439 = value;
					this.SendPropertyChanged("Y_DYS439");
					this.OnY_DYS439Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y_DYS635", DbType="Float")]
		public System.Nullable<double> Y_DYS635
		{
			get
			{
				return this._Y_DYS635;
			}
			set
			{
				if ((this._Y_DYS635 != value))
				{
					this.OnY_DYS635Changing(value);
					this.SendPropertyChanging();
					this._Y_DYS635 = value;
					this.SendPropertyChanged("Y_DYS635");
					this.OnY_DYS635Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DYS449", DbType="Float")]
		public System.Nullable<double> DYS449
		{
			get
			{
				return this._DYS449;
			}
			set
			{
				if ((this._DYS449 != value))
				{
					this.OnDYS449Changing(value);
					this.SendPropertyChanging();
					this._DYS449 = value;
					this.SendPropertyChanged("DYS449");
					this.OnDYS449Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DYS460", DbType="Float")]
		public System.Nullable<double> DYS460
		{
			get
			{
				return this._DYS460;
			}
			set
			{
				if ((this._DYS460 != value))
				{
					this.OnDYS460Changing(value);
					this.SendPropertyChanging();
					this._DYS460 = value;
					this.SendPropertyChanged("DYS460");
					this.OnDYS460Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DYS481", DbType="Float")]
		public System.Nullable<double> DYS481
		{
			get
			{
				return this._DYS481;
			}
			set
			{
				if ((this._DYS481 != value))
				{
					this.OnDYS481Changing(value);
					this.SendPropertyChanging();
					this._DYS481 = value;
					this.SendPropertyChanged("DYS481");
					this.OnDYS481Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DYS518", DbType="Float")]
		public System.Nullable<double> DYS518
		{
			get
			{
				return this._DYS518;
			}
			set
			{
				if ((this._DYS518 != value))
				{
					this.OnDYS518Changing(value);
					this.SendPropertyChanging();
					this._DYS518 = value;
					this.SendPropertyChanged("DYS518");
					this.OnDYS518Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DYS533", DbType="Float")]
		public System.Nullable<double> DYS533
		{
			get
			{
				return this._DYS533;
			}
			set
			{
				if ((this._DYS533 != value))
				{
					this.OnDYS533Changing(value);
					this.SendPropertyChanging();
					this._DYS533 = value;
					this.SendPropertyChanged("DYS533");
					this.OnDYS533Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DYS570", DbType="Float")]
		public System.Nullable<double> DYS570
		{
			get
			{
				return this._DYS570;
			}
			set
			{
				if ((this._DYS570 != value))
				{
					this.OnDYS570Changing(value);
					this.SendPropertyChanging();
					this._DYS570 = value;
					this.SendPropertyChanged("DYS570");
					this.OnDYS570Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DYS576", DbType="Float")]
		public System.Nullable<double> DYS576
		{
			get
			{
				return this._DYS576;
			}
			set
			{
				if ((this._DYS576 != value))
				{
					this.OnDYS576Changing(value);
					this.SendPropertyChanging();
					this._DYS576 = value;
					this.SendPropertyChanged("DYS576");
					this.OnDYS576Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DYS627", DbType="Float")]
		public System.Nullable<double> DYS627
		{
			get
			{
				return this._DYS627;
			}
			set
			{
				if ((this._DYS627 != value))
				{
					this.OnDYS627Changing(value);
					this.SendPropertyChanging();
					this._DYS627 = value;
					this.SendPropertyChanged("DYS627");
					this.OnDYS627Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DYF387S1", DbType="Float")]
		public System.Nullable<double> DYF387S1
		{
			get
			{
				return this._DYF387S1;
			}
			set
			{
				if ((this._DYF387S1 != value))
				{
					this.OnDYF387S1Changing(value);
					this.SendPropertyChanging();
					this._DYF387S1 = value;
					this.SendPropertyChanged("DYF387S1");
					this.OnDYF387S1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DYS447", DbType="Float")]
		public System.Nullable<double> DYS447
		{
			get
			{
				return this._DYS447;
			}
			set
			{
				if ((this._DYS447 != value))
				{
					this.OnDYS447Changing(value);
					this.SendPropertyChanging();
					this._DYS447 = value;
					this.SendPropertyChanged("DYS447");
					this.OnDYS447Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Popul_Result", Storage="_Popul", ThisKey="PopulId", OtherKey="PopulId", IsForeignKey=true)]
		public Popul Popul
		{
			get
			{
				return this._Popul.Entity;
			}
			set
			{
				Popul previousValue = this._Popul.Entity;
				if (((previousValue != value) 
							|| (this._Popul.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Popul.Entity = null;
						previousValue.Results.Remove(this);
					}
					this._Popul.Entity = value;
					if ((value != null))
					{
						value.Results.Add(this);
						this._PopulId = value.PopulId;
					}
					else
					{
						this._PopulId = default(int);
					}
					this.SendPropertyChanged("Popul");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sample_Result", Storage="_Sample", ThisKey="SampleId", OtherKey="SampleId", IsForeignKey=true)]
		public Sample Sample
		{
			get
			{
				return this._Sample.Entity;
			}
			set
			{
				Sample previousValue = this._Sample.Entity;
				if (((previousValue != value) 
							|| (this._Sample.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sample.Entity = null;
						previousValue.Results.Remove(this);
					}
					this._Sample.Entity = value;
					if ((value != null))
					{
						value.Results.Add(this);
						this._SampleId = value.SampleId;
					}
					else
					{
						this._SampleId = default(int);
					}
					this.SendPropertyChanged("Sample");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class RepSamplesProcResult
	{
		
		private string _SampleCode;
		
		private string _ExpedName;
		
		private string _PointRegion;
		
		private string _EtnoName;
		
		private string _PopulName;
		
		private string _SampleType;
		
		private string _Pol;
		
		private string _bvLab;
		
		private string _bvFridge;
		
		private string _bvFridgeModule;
		
		private string _bvFridgeShelf;
		
		private string _bvBlockCode;
		
		private string _bvBlockItemCode;
		
		private string _mvLab;
		
		private string _mvFridge;
		
		private string _mvFridgeModule;
		
		private string _mvFridgeShelf;
		
		private string _mvBlockCode;
		
		private string _mvBlockItemCode;
		
		private string _okLab;
		
		private string _okFridge;
		
		private string _okFridgeModule;
		
		private string _okFridgeShelf;
		
		private string _okBlockCode;
		
		private string _okBlockItemCode;
		
		private string _skLab;
		
		private string _skFridge;
		
		private string _skFridgeModule;
		
		private string _skFridgeShelf;
		
		private string _skBlockCode;
		
		private string _skBlockItemCode;
		
		private string _kdLab;
		
		private string _kdFridge;
		
		private string _kdFridgeModule;
		
		private string _kdFridgeShelf;
		
		private string _kdBlockCode;
		
		private string _kdBlockItemCode;
		
		private string _adLab;
		
		private string _adFridge;
		
		private string _adFridgeModule;
		
		private string _adFridgeShelf;
		
		private string _adBlockCode;
		
		private string _adBlockItemCode;
		
		private string _rdLab;
		
		private string _rdFridge;
		
		private string _rdFridgeModule;
		
		private string _rdFridgeShelf;
		
		private string _rdBlockCode;
		
		private string _rdBlockItemCode;
		
		private string _ndLab;
		
		private string _ndFridge;
		
		private string _ndFridgeModule;
		
		private string _ndFridgeShelf;
		
		private string _ndBlockCode;
		
		private string _ndBlockItemCode;
		
		private System.Nullable<double> _kdConcentration;
		
		private string _kdQuality1;
		
		private string _kdQuality2;
		
		private string _rdQuality1;
		
		private string _rdQuality2;
		
		private System.Nullable<double> _kdVolume;
		
		private System.Nullable<double> _rdVolume;
		
		private int _BirthYear;
		
		private string _EyesColor;
		
		private string _HairColor;
		
		private string _EtnoNameY;
		
		private string _HaploY;
		
		private string _MarkerY;
		
		private string _EtnoNameMt;
		
		private string _HaploMt;
		
		private string _MarkerMt;
		
		private System.Nullable<double> _GWS1;
		
		private System.Nullable<double> _GWS2;
		
		private string _HasFullGenome;
		
		private string _HasFoto;
		
		public RepSamplesProcResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleCode", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SampleCode
		{
			get
			{
				return this._SampleCode;
			}
			set
			{
				if ((this._SampleCode != value))
				{
					this._SampleCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpedName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ExpedName
		{
			get
			{
				return this._ExpedName;
			}
			set
			{
				if ((this._ExpedName != value))
				{
					this._ExpedName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointRegion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string PointRegion
		{
			get
			{
				return this._PointRegion;
			}
			set
			{
				if ((this._PointRegion != value))
				{
					this._PointRegion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtnoName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EtnoName
		{
			get
			{
				return this._EtnoName;
			}
			set
			{
				if ((this._EtnoName != value))
				{
					this._EtnoName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopulName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PopulName
		{
			get
			{
				return this._PopulName;
			}
			set
			{
				if ((this._PopulName != value))
				{
					this._PopulName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleType", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string SampleType
		{
			get
			{
				return this._SampleType;
			}
			set
			{
				if ((this._SampleType != value))
				{
					this._SampleType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pol", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Pol
		{
			get
			{
				return this._Pol;
			}
			set
			{
				if ((this._Pol != value))
				{
					this._Pol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bvLab", DbType="VarChar(100)")]
		public string bvLab
		{
			get
			{
				return this._bvLab;
			}
			set
			{
				if ((this._bvLab != value))
				{
					this._bvLab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bvFridge", DbType="VarChar(100)")]
		public string bvFridge
		{
			get
			{
				return this._bvFridge;
			}
			set
			{
				if ((this._bvFridge != value))
				{
					this._bvFridge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bvFridgeModule", DbType="VarChar(100)")]
		public string bvFridgeModule
		{
			get
			{
				return this._bvFridgeModule;
			}
			set
			{
				if ((this._bvFridgeModule != value))
				{
					this._bvFridgeModule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bvFridgeShelf", DbType="VarChar(100)")]
		public string bvFridgeShelf
		{
			get
			{
				return this._bvFridgeShelf;
			}
			set
			{
				if ((this._bvFridgeShelf != value))
				{
					this._bvFridgeShelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bvBlockCode", DbType="VarChar(100)")]
		public string bvBlockCode
		{
			get
			{
				return this._bvBlockCode;
			}
			set
			{
				if ((this._bvBlockCode != value))
				{
					this._bvBlockCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bvBlockItemCode", DbType="VarChar(100)")]
		public string bvBlockItemCode
		{
			get
			{
				return this._bvBlockItemCode;
			}
			set
			{
				if ((this._bvBlockItemCode != value))
				{
					this._bvBlockItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mvLab", DbType="VarChar(100)")]
		public string mvLab
		{
			get
			{
				return this._mvLab;
			}
			set
			{
				if ((this._mvLab != value))
				{
					this._mvLab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mvFridge", DbType="VarChar(100)")]
		public string mvFridge
		{
			get
			{
				return this._mvFridge;
			}
			set
			{
				if ((this._mvFridge != value))
				{
					this._mvFridge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mvFridgeModule", DbType="VarChar(100)")]
		public string mvFridgeModule
		{
			get
			{
				return this._mvFridgeModule;
			}
			set
			{
				if ((this._mvFridgeModule != value))
				{
					this._mvFridgeModule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mvFridgeShelf", DbType="VarChar(100)")]
		public string mvFridgeShelf
		{
			get
			{
				return this._mvFridgeShelf;
			}
			set
			{
				if ((this._mvFridgeShelf != value))
				{
					this._mvFridgeShelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mvBlockCode", DbType="VarChar(100)")]
		public string mvBlockCode
		{
			get
			{
				return this._mvBlockCode;
			}
			set
			{
				if ((this._mvBlockCode != value))
				{
					this._mvBlockCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mvBlockItemCode", DbType="VarChar(100)")]
		public string mvBlockItemCode
		{
			get
			{
				return this._mvBlockItemCode;
			}
			set
			{
				if ((this._mvBlockItemCode != value))
				{
					this._mvBlockItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okLab", DbType="VarChar(100)")]
		public string okLab
		{
			get
			{
				return this._okLab;
			}
			set
			{
				if ((this._okLab != value))
				{
					this._okLab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okFridge", DbType="VarChar(100)")]
		public string okFridge
		{
			get
			{
				return this._okFridge;
			}
			set
			{
				if ((this._okFridge != value))
				{
					this._okFridge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okFridgeModule", DbType="VarChar(100)")]
		public string okFridgeModule
		{
			get
			{
				return this._okFridgeModule;
			}
			set
			{
				if ((this._okFridgeModule != value))
				{
					this._okFridgeModule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okFridgeShelf", DbType="VarChar(100)")]
		public string okFridgeShelf
		{
			get
			{
				return this._okFridgeShelf;
			}
			set
			{
				if ((this._okFridgeShelf != value))
				{
					this._okFridgeShelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okBlockCode", DbType="VarChar(100)")]
		public string okBlockCode
		{
			get
			{
				return this._okBlockCode;
			}
			set
			{
				if ((this._okBlockCode != value))
				{
					this._okBlockCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_okBlockItemCode", DbType="VarChar(100)")]
		public string okBlockItemCode
		{
			get
			{
				return this._okBlockItemCode;
			}
			set
			{
				if ((this._okBlockItemCode != value))
				{
					this._okBlockItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skLab", DbType="VarChar(100)")]
		public string skLab
		{
			get
			{
				return this._skLab;
			}
			set
			{
				if ((this._skLab != value))
				{
					this._skLab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skFridge", DbType="VarChar(100)")]
		public string skFridge
		{
			get
			{
				return this._skFridge;
			}
			set
			{
				if ((this._skFridge != value))
				{
					this._skFridge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skFridgeModule", DbType="VarChar(100)")]
		public string skFridgeModule
		{
			get
			{
				return this._skFridgeModule;
			}
			set
			{
				if ((this._skFridgeModule != value))
				{
					this._skFridgeModule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skFridgeShelf", DbType="VarChar(100)")]
		public string skFridgeShelf
		{
			get
			{
				return this._skFridgeShelf;
			}
			set
			{
				if ((this._skFridgeShelf != value))
				{
					this._skFridgeShelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skBlockCode", DbType="VarChar(100)")]
		public string skBlockCode
		{
			get
			{
				return this._skBlockCode;
			}
			set
			{
				if ((this._skBlockCode != value))
				{
					this._skBlockCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skBlockItemCode", DbType="VarChar(100)")]
		public string skBlockItemCode
		{
			get
			{
				return this._skBlockItemCode;
			}
			set
			{
				if ((this._skBlockItemCode != value))
				{
					this._skBlockItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kdLab", DbType="VarChar(100)")]
		public string kdLab
		{
			get
			{
				return this._kdLab;
			}
			set
			{
				if ((this._kdLab != value))
				{
					this._kdLab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kdFridge", DbType="VarChar(100)")]
		public string kdFridge
		{
			get
			{
				return this._kdFridge;
			}
			set
			{
				if ((this._kdFridge != value))
				{
					this._kdFridge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kdFridgeModule", DbType="VarChar(100)")]
		public string kdFridgeModule
		{
			get
			{
				return this._kdFridgeModule;
			}
			set
			{
				if ((this._kdFridgeModule != value))
				{
					this._kdFridgeModule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kdFridgeShelf", DbType="VarChar(100)")]
		public string kdFridgeShelf
		{
			get
			{
				return this._kdFridgeShelf;
			}
			set
			{
				if ((this._kdFridgeShelf != value))
				{
					this._kdFridgeShelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kdBlockCode", DbType="VarChar(100)")]
		public string kdBlockCode
		{
			get
			{
				return this._kdBlockCode;
			}
			set
			{
				if ((this._kdBlockCode != value))
				{
					this._kdBlockCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kdBlockItemCode", DbType="VarChar(100)")]
		public string kdBlockItemCode
		{
			get
			{
				return this._kdBlockItemCode;
			}
			set
			{
				if ((this._kdBlockItemCode != value))
				{
					this._kdBlockItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adLab", DbType="VarChar(100)")]
		public string adLab
		{
			get
			{
				return this._adLab;
			}
			set
			{
				if ((this._adLab != value))
				{
					this._adLab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adFridge", DbType="VarChar(100)")]
		public string adFridge
		{
			get
			{
				return this._adFridge;
			}
			set
			{
				if ((this._adFridge != value))
				{
					this._adFridge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adFridgeModule", DbType="VarChar(100)")]
		public string adFridgeModule
		{
			get
			{
				return this._adFridgeModule;
			}
			set
			{
				if ((this._adFridgeModule != value))
				{
					this._adFridgeModule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adFridgeShelf", DbType="VarChar(100)")]
		public string adFridgeShelf
		{
			get
			{
				return this._adFridgeShelf;
			}
			set
			{
				if ((this._adFridgeShelf != value))
				{
					this._adFridgeShelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adBlockCode", DbType="VarChar(100)")]
		public string adBlockCode
		{
			get
			{
				return this._adBlockCode;
			}
			set
			{
				if ((this._adBlockCode != value))
				{
					this._adBlockCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adBlockItemCode", DbType="VarChar(100)")]
		public string adBlockItemCode
		{
			get
			{
				return this._adBlockItemCode;
			}
			set
			{
				if ((this._adBlockItemCode != value))
				{
					this._adBlockItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdLab", DbType="VarChar(100)")]
		public string rdLab
		{
			get
			{
				return this._rdLab;
			}
			set
			{
				if ((this._rdLab != value))
				{
					this._rdLab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdFridge", DbType="VarChar(100)")]
		public string rdFridge
		{
			get
			{
				return this._rdFridge;
			}
			set
			{
				if ((this._rdFridge != value))
				{
					this._rdFridge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdFridgeModule", DbType="VarChar(100)")]
		public string rdFridgeModule
		{
			get
			{
				return this._rdFridgeModule;
			}
			set
			{
				if ((this._rdFridgeModule != value))
				{
					this._rdFridgeModule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdFridgeShelf", DbType="VarChar(100)")]
		public string rdFridgeShelf
		{
			get
			{
				return this._rdFridgeShelf;
			}
			set
			{
				if ((this._rdFridgeShelf != value))
				{
					this._rdFridgeShelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdBlockCode", DbType="VarChar(100)")]
		public string rdBlockCode
		{
			get
			{
				return this._rdBlockCode;
			}
			set
			{
				if ((this._rdBlockCode != value))
				{
					this._rdBlockCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdBlockItemCode", DbType="VarChar(100)")]
		public string rdBlockItemCode
		{
			get
			{
				return this._rdBlockItemCode;
			}
			set
			{
				if ((this._rdBlockItemCode != value))
				{
					this._rdBlockItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ndLab", DbType="VarChar(100)")]
		public string ndLab
		{
			get
			{
				return this._ndLab;
			}
			set
			{
				if ((this._ndLab != value))
				{
					this._ndLab = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ndFridge", DbType="VarChar(100)")]
		public string ndFridge
		{
			get
			{
				return this._ndFridge;
			}
			set
			{
				if ((this._ndFridge != value))
				{
					this._ndFridge = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ndFridgeModule", DbType="VarChar(100)")]
		public string ndFridgeModule
		{
			get
			{
				return this._ndFridgeModule;
			}
			set
			{
				if ((this._ndFridgeModule != value))
				{
					this._ndFridgeModule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ndFridgeShelf", DbType="VarChar(100)")]
		public string ndFridgeShelf
		{
			get
			{
				return this._ndFridgeShelf;
			}
			set
			{
				if ((this._ndFridgeShelf != value))
				{
					this._ndFridgeShelf = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ndBlockCode", DbType="VarChar(100)")]
		public string ndBlockCode
		{
			get
			{
				return this._ndBlockCode;
			}
			set
			{
				if ((this._ndBlockCode != value))
				{
					this._ndBlockCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ndBlockItemCode", DbType="VarChar(100)")]
		public string ndBlockItemCode
		{
			get
			{
				return this._ndBlockItemCode;
			}
			set
			{
				if ((this._ndBlockItemCode != value))
				{
					this._ndBlockItemCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kdConcentration", DbType="Float")]
		public System.Nullable<double> kdConcentration
		{
			get
			{
				return this._kdConcentration;
			}
			set
			{
				if ((this._kdConcentration != value))
				{
					this._kdConcentration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kdQuality1", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string kdQuality1
		{
			get
			{
				return this._kdQuality1;
			}
			set
			{
				if ((this._kdQuality1 != value))
				{
					this._kdQuality1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kdQuality2", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string kdQuality2
		{
			get
			{
				return this._kdQuality2;
			}
			set
			{
				if ((this._kdQuality2 != value))
				{
					this._kdQuality2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdQuality1", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string rdQuality1
		{
			get
			{
				return this._rdQuality1;
			}
			set
			{
				if ((this._rdQuality1 != value))
				{
					this._rdQuality1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdQuality2", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string rdQuality2
		{
			get
			{
				return this._rdQuality2;
			}
			set
			{
				if ((this._rdQuality2 != value))
				{
					this._rdQuality2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kdVolume", DbType="Float")]
		public System.Nullable<double> kdVolume
		{
			get
			{
				return this._kdVolume;
			}
			set
			{
				if ((this._kdVolume != value))
				{
					this._kdVolume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rdVolume", DbType="Float")]
		public System.Nullable<double> rdVolume
		{
			get
			{
				return this._rdVolume;
			}
			set
			{
				if ((this._rdVolume != value))
				{
					this._rdVolume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthYear", DbType="Int NOT NULL")]
		public int BirthYear
		{
			get
			{
				return this._BirthYear;
			}
			set
			{
				if ((this._BirthYear != value))
				{
					this._BirthYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyesColor", DbType="VarChar(100)")]
		public string EyesColor
		{
			get
			{
				return this._EyesColor;
			}
			set
			{
				if ((this._EyesColor != value))
				{
					this._EyesColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HairColor", DbType="VarChar(100)")]
		public string HairColor
		{
			get
			{
				return this._HairColor;
			}
			set
			{
				if ((this._HairColor != value))
				{
					this._HairColor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtnoNameY", DbType="VarChar(100)")]
		public string EtnoNameY
		{
			get
			{
				return this._EtnoNameY;
			}
			set
			{
				if ((this._EtnoNameY != value))
				{
					this._EtnoNameY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaploY", DbType="VarChar(100)")]
		public string HaploY
		{
			get
			{
				return this._HaploY;
			}
			set
			{
				if ((this._HaploY != value))
				{
					this._HaploY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkerY", DbType="VarChar(100)")]
		public string MarkerY
		{
			get
			{
				return this._MarkerY;
			}
			set
			{
				if ((this._MarkerY != value))
				{
					this._MarkerY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtnoNameMt", DbType="VarChar(100)")]
		public string EtnoNameMt
		{
			get
			{
				return this._EtnoNameMt;
			}
			set
			{
				if ((this._EtnoNameMt != value))
				{
					this._EtnoNameMt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HaploMt", DbType="VarChar(100)")]
		public string HaploMt
		{
			get
			{
				return this._HaploMt;
			}
			set
			{
				if ((this._HaploMt != value))
				{
					this._HaploMt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkerMt", DbType="VarChar(100)")]
		public string MarkerMt
		{
			get
			{
				return this._MarkerMt;
			}
			set
			{
				if ((this._MarkerMt != value))
				{
					this._MarkerMt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GWS1", DbType="Float")]
		public System.Nullable<double> GWS1
		{
			get
			{
				return this._GWS1;
			}
			set
			{
				if ((this._GWS1 != value))
				{
					this._GWS1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GWS2", DbType="Float")]
		public System.Nullable<double> GWS2
		{
			get
			{
				return this._GWS2;
			}
			set
			{
				if ((this._GWS2 != value))
				{
					this._GWS2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFullGenome", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string HasFullGenome
		{
			get
			{
				return this._HasFullGenome;
			}
			set
			{
				if ((this._HasFullGenome != value))
				{
					this._HasFullGenome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFoto", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string HasFoto
		{
			get
			{
				return this._HasFoto;
			}
			set
			{
				if ((this._HasFoto != value))
				{
					this._HasFoto = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
